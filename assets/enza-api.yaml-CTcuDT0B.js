const t=Array.from({length:4},()=>({})),e={"#/components/parameters/apiKey":t[0],"#/components/parameters/contentType":t[1],"#/components/schemas/BadRequest":t[2],"#/components/schemas/ServerError":t[3]};Object.assign(t[0],{name:"X-API-Key",in:"header",required:!0,description:"API key for authentication",schema:{type:"string"}});Object.assign(t[1],{name:"Content-Type",in:"header",required:!0,description:"Content type of the request",schema:{type:"string",enum:["application/json"]}});Object.assign(t[2],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Invalid request parameters"]}}}}});Object.assign(t[3],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_INTERNAL_SERVER"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Internal server error occurred"]}}}}});const s={openapi:"3.1.1",info:{title:"Enza REST API Documentation",description:`**Welcome to the Enza REST API Developer Portal. Our API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities. Explore the portal, integrate with ease, and unlock secure, efficient, and scalable instant issuing solutions.**

Our Instant Issuing API is:
- **Secure**: Built with industry-standard security protocols
- **Flexible**: Adaptable to various financial use cases
- **Reliable**: Designed for 99.9% uptime
- **Comprehensive**: Covering the entire card issuance lifecycle
`,version:"1.0.0",contact:{name:"Enza API Support",url:"https://www.enzagroup.global/contact/",email:"api-support@enzagroup.global"}},paths:{"/cards/by-rid/{rid}":{get:{summary:"Get Card by RID",description:"Retrieve a card's details using its RID (reference ID).",parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"],{name:"rid",in:"path",required:!0,description:"The reference ID of the card to retrieve.",schema:{type:"string"}}],tags:["Cards"],responses:{200:{description:"Successful response with card details.",content:{"application/json":{schema:{type:"object",required:["message","card"],properties:{message:{type:"string",description:"Success message."},card:{type:"object",properties:{rid:{type:"string",description:"The card external RID."},status:{type:"string",description:"The current status of the card."},pan:{type:"string",description:"The Primary Account Number (PAN) of the card."},exp_time:{type:"string",format:"date-time",description:"Expiration time of the card."}}}}}}}},404:{description:"Card not found."}}}},"/cards/activate":{post:{summary:"Activate Card",description:"Activate a card by providing the CardStatus and CardRefNum.",parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],tags:["Cards"],requestBody:{description:"Details for activating a card.",content:{"application/json":{schema:{type:"object",required:["CardStatus","CardRefNum"],properties:{CardStatus:{type:"string",enum:["Active","Deactivated","New","Blocked","Referral","Lost","Stolen","Damaged","Compromised","Closed"],description:"The status of the card."},CardRefNum:{type:"string",description:"The CardRefNum of the card to be activated."}}}}}},responses:{200:{description:"Successful response",content:{"application/json":{schema:{type:"object",required:["message"],properties:{message:{type:"string",description:"Card Activated successfully!"}}},examples:{successResponse:{summary:"Successful Request Example",value:{message:"Card Activated successfully!"}}}}}},400:{description:"Bad request response",content:{"application/json":{schema:e["#/components/schemas/BadRequest"]}}},500:{description:"Internal server error",content:{"application/json":{schema:e["#/components/schemas/ServerError"]}}}}}},"/cards/deletetoken":{post:{summary:"Delete Token",description:"Remove a token associated with a card using the CardRefNum.",parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],tags:["Cards"],requestBody:{description:"Details for deleting a token.",content:{"application/json":{schema:{type:"object",required:["CardRefNum"],properties:{CardRefNum:{type:"string",description:"The reference number of the card whose token is being deleted."}}}}}},responses:{200:{description:"Successfully deleted the token.",content:{"application/json":{schema:{type:"object",required:["message"],properties:{message:{type:"string",description:"Confirmation message that the token is deleted."}}},examples:{successResponse:{summary:"Successful Token Deletion",value:{message:"Success, Token is Deleted!"}}}}}},400:{description:"Bad request response",content:{"application/json":{schema:e["#/components/schemas/BadRequest"]}}}}}},"/instantissuing":{post:{operationId:"instantIssuingRequest",summary:"Instant Issuing Request",description:`Create a new card instantly with custom settings and configurations.
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],tags:["Instant Issuing"],requestBody:{description:"Card details for instant issuing.",content:{"application/json":{schema:{type:"object",required:["cardholderName","cardProduct","deliveryMethod"],properties:{cardholderName:{type:"string",description:"Full name of the cardholder."},cardProduct:{type:"string",enum:["Debit","Credit","Prepaid"],description:"Type of card product."},deliveryMethod:{type:"string",enum:["Digital","Physical"],description:"Method of card delivery."},expiryMonths:{type:"integer",description:"Number of months until expiry.",default:36},initialStatus:{type:"string",enum:["Active","Inactive"],description:"Initial status of the card.",default:"Inactive"}}}}}},responses:{200:{description:"Successfully issued a new card.",content:{"application/json":{schema:{type:"object",required:["success","cardDetails"],properties:{success:{type:"boolean",description:"Indicates if the operation was successful."},cardDetails:{type:"object",properties:{cardId:{type:"string",description:"Unique identifier for the card."},maskedPan:{type:"string",description:"Masked PAN (e.g., 4111 **** **** 1111)."},expiryDate:{type:"string",format:"date",description:"Expiry date of the card."},cardholderName:{type:"string",description:"Name of the cardholder."},status:{type:"string",description:"Current status of the card."}}}}},examples:{successResponse:{summary:"Successful Instant Issuing",value:{success:!0,cardDetails:{cardId:"card_2025052917120001",maskedPan:"4111 **** **** 1111",expiryDate:"2028-05-31",cardholderName:"JOHN DOE",status:"Inactive"}}}}}}},400:{description:"Bad request response",content:{"application/json":{schema:e["#/components/schemas/BadRequest"]}}},500:{description:"Internal server error",content:{"application/json":{schema:e["#/components/schemas/ServerError"]}}}}}}},components:{parameters:{apiKey:{name:"X-API-Key",in:"header",required:!0,description:"API key for authentication",schema:{type:"string"}},contentType:{name:"Content-Type",in:"header",required:!0,description:"Content type of the request",schema:{type:"string",enum:["application/json"]}}},schemas:{BadRequest:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Invalid request parameters"]}}}}},ServerError:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_INTERNAL_SERVER"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Internal server error occurred"]}}}}}}}};export{s as schema};
//# sourceMappingURL=enza-api.yaml-CTcuDT0B.js.map
