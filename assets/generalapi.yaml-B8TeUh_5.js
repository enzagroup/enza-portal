const t=Array.from({length:14},()=>({})),e={"#/components/parameters/apiKey":t[0],"#/components/parameters/contentType":t[1],"#/components/schemas/Customer":t[2],"#/components/schemas/SuccessEnvelope":t[3],"#/components/schemas/BadRequest":t[4],"#/components/responses/AuthenticationError":t[5],"#/components/schemas/CardAlreadyAssigned":t[6],"#/components/responses/InternalServerError":t[7],"#/components/responses/LambdaTimeout":t[8],"#/components/schemas/ValidationError":t[9],"#/components/schemas/ConflictError":t[10],"#/components/schemas/PinSetting":t[11],"#/components/schemas/PinChanging":t[12],"#/components/schemas/CreateCardStandard":t[13]};Object.assign(t[0],{name:"x-api-key",in:"header",required:!0,schema:{type:"string"},description:"API key for authentication"});Object.assign(t[1],{name:"Content-Type",in:"header",required:!0,schema:{type:"string",default:"application/json"},description:"Content type of the request body"});Object.assign(t[2],{type:"object",required:["RequestType","AccountNum","CardRefNum","EmbossedName","NationalId","Passport","FirstName","LastName"],properties:{RequestType:{type:"string",description:"**Required.** Request type:\n- `NewAccountNewCustomer`: New customer  \n- `NewAccountExistingCustomer`: Existing customer\n"},CardRefNum:{type:"string",description:"**Required.** Card reference number"},EmbossedName:{type:"string",description:"**Required.** Name to be embossed on the card"},AccountNum:{type:"string",description:"**Required.** Account number to link to the card"},FirstName:{type:"string",description:"**Required for new customers.** Customer's first name"},MiddleName:{type:"string",description:"Optional. Customer's middle name"},LastName:{type:"string",description:"**Required for new customers.** Customer's last name"},NationalId:{type:"string",description:"Either NationalId or Passport is required. Customer's national ID"},Passport:{type:"string",description:"Either NationalId or Passport is required. Customer's passport number"},BirthDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"Date of birth in YYYY-MM-DD format",examples:["1990-01-01"]},Email:{type:"string",format:"email",description:"Customer's email address"},MobilePhone:{type:"string",description:"Customer's mobile phone number"},StreetTitle:{type:"string",description:"Customer's street address"},Zip:{type:"string",description:"Customer's postal code"}}});Object.assign(t[3],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_REQUEST_PROCESSED"]},params:{type:"object",required:["requestType"],properties:{requestType:{type:"string",examples:["NewAccountNewCustomer"]}}}}});Object.assign(t[4],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",required:["missingProperty"],properties:{missingProperty:{type:"string",examples:["RequestType"]}}}}});Object.assign(t[5],{description:"Authentication context is missing or invalid",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_AUTH_CONTEXT"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Authentication context is missing"]}}}}},examples:{authError:{summary:"Authentication error",value:{code:"ERR_AUTH_CONTEXT",params:{message:"Authentication context is missing"}}}}}}});Object.assign(t[6],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_CARD_ALREADY_ASSIGNED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["This Card Is Already Assigned To A Customer!"]}}}}});Object.assign(t[7],{description:"An unexpected error occurred",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_INTERNAL_SERVER_ERROR"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["An unexpected error occurred. Please try again later."]}}}}},examples:{internalError:{summary:"Internal server error",value:{code:"ERR_INTERNAL_SERVER_ERROR",params:{message:"An unexpected error occurred. Please try again later."}}}}}}});Object.assign(t[8],{description:"Gateway Timeout â€“ task took too long",content:{"application/json":{schema:{type:"object",required:["errorMessage"],properties:{errorMessage:{type:"string",examples:["Task timed out after 1.10 seconds"]}}},examples:{lambdaTimeout:{summary:"Lambda execution timed out",value:{errorMessage:"Task timed out after 1.10 seconds"}}}}}});Object.assign(t[9],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",properties:{message:{type:"string",examples:["Missing required field or invalid field format"]},missingProperty:{type:"string",description:"The name of the missing or invalid property",examples:["CardRefNum"]}}}}});Object.assign(t[10],{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_CARD_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Operation was declined"]}}}}});Object.assign(t[11],{type:"object",required:["Pan","PinBlock"],properties:{Pan:{type:"string",description:"**Required.** The Primary Account Number (PAN) of the card",examples:["1234567890123456"]},PinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the new PIN",examples:["ABC123DEF456"]}}});Object.assign(t[12],{type:"object",required:["Pan","oldPinBlock","newPinBlock"],properties:{Pan:{type:"string",description:"**Required.** The Primary Account Number (PAN) of the card",examples:["1234567890123456"]},oldPinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the current PIN for verification",examples:["OLD123PIN456"]},newPinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the new PIN to be set",examples:["NEW789PIN012"]}}});Object.assign(t[13],{type:"object",required:["FirstName","LastName","BirthDate","Email","MobilePhone","StreetTitle","Zip","NotificationStatus","NationalId","Passport"],properties:{FirstName:{type:"string",description:"**Required.** Customer's first name",examples:["John"]},LastName:{type:"string",description:"**Required.** Customer's last name",examples:["Doe"]},MiddleName:{type:"string",description:"Optional. Customer's middle name",examples:["William"]},BirthDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"**Required.** Birth date in YYYY-MM-DD format",examples:["1990-01-15"]},NationalId:{type:"string",description:"Either NationalId or Passport is required. Customer's national ID",examples:["1234567890"]},Passport:{type:"string",description:"Either NationalId or Passport is required. Customer's passport number",examples:["AB1234567"]},Email:{type:"string",format:"email",description:"**Required.** Customer's email address",examples:["john.doe@example.com"]},MobilePhone:{type:"string",description:"**Required.** Customer's mobile phone number",examples:["1234567890"]},StreetTitle:{type:"string",description:"**Required.** Customer's street address",examples:["123 Main Street"]},Zip:{type:"string",description:"**Required.** Customer's postal code",examples:["12345"]},NotificationStatus:{type:"string",enum:["enabled","disabled"],description:"**Required.** Notification preference - enabled or disabled",examples:["enabled"]}}});const s={openapi:"3.1.1",info:{title:"Enza REST API Documentation",description:`**Welcome to the Enza REST API Developer Portal**

Our API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities.

## Key Features
- **Instant Card Issuance**: Issue physical and virtual cards in real-time
- **Card Management**: Complete lifecycle management from creation to closure
- **Transaction Monitoring**: Real-time transaction tracking and reporting
- **PIN Management**: Secure PIN operations for enhanced security
- **E-Commerce Controls**: Manage online transaction capabilities

## Getting Started
All API requests require:
- \`x-api-key\` is required for authentication

Base URL: \`https://uat-api.enza.cloud/TX/v1\`
`,version:"2025-02-16T14:26:47Z"},servers:[{url:"https://uat-api.enza.cloud/TX/v1"}],tags:[{name:"Card Management",description:"Operations for creating, activating, and managing card status"},{name:"Card Information",description:"Retrieve card details and customer card information"},{name:"Transactions",description:"View and manage card transaction history"},{name:"E-Commerce",description:"Manage e-commerce and online transaction settings"},{name:"PIN Management",description:"Set and change card PINs securely"},{name:"Instant Issuing",description:"Instant card issuance for new and existing customers"}],paths:{"/instantissuing":{post:{operationId:"instantIssueCard",summary:"Instant Issue Card",description:`Instantly issue a card for a new or existing customer.

This endpoint handles two scenarios:

| Scenario                | RequestType Value           |
|-------------------------|-----------------------------|
| New customer            | \`NewAccountNewCustomer\`     |
| Existing customer       | \`NewAccountExistingCustomer\`|
`,tags:["Instant Issuing"],parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/Customer"],examples:{default:{value:{RequestType:"NewAccountNewCustomer",LastName:"EEE",FirstName:"Cust02",BirthDate:"1990-01-20",Passport:"76238310075",Email:"test@test.com",MobilePhone:"9991234567",StreetTitle:"Baker's Str",Zip:"WC1X 9NX",AccountNum:"AAABBB150573",CardRefNum:"000515",EmbossedName:"Cust02 New"}}}}}},responses:{200:{description:"Successful response",content:{"application/json":{schema:e["#/components/schemas/SuccessEnvelope"],examples:{directSuccess:{summary:"Direct success example",value:{code:"SUCCESS_REQUEST_PROCESSED",params:{requestType:"NewAccountNewCustomer"}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/BadRequest"],examples:{validationFailure:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{missingProperty:"RequestType"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card already assigned",content:{"application/json":{schema:e["#/components/schemas/CardAlreadyAssigned"],examples:{conflictError:{summary:"Card already assigned example",value:{code:"ERR_CARD_ALREADY_ASSIGNED",params:{message:"This Card Is Already Assigned To A Customer!"}}}}}}},500:e["#/components/responses/InternalServerError"],504:{description:"Gateway Timeout",content:{"application/json":{schema:{type:"object",required:["errorMessage"],properties:{errorMessage:{type:"string",description:"Timeout error message",examples:["Task timed out after 1.10 seconds"]}}},examples:{lambdaTimeout:{summary:"Lambda execution timed out",value:{errorMessage:"Task timed out after 1.10 seconds"}}}}}}}}},"/cards/tdsenrollement":{post:{operationId:"updateEcommerceStatus",summary:"Enable or Disable E-Commerce Transactions",description:`Control e-commerce (online) transaction capabilities for a card.
`,tags:["E-Commerce"],parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{description:"Details for updating ECstatus of a card.",content:{"application/json":{schema:{type:"object",required:["ECstatusEnable","CardRefNum"],properties:{CardRefNum:{type:"string",description:"**Required.** Card reference number"},ECstatusEnable:{type:"string",description:'**Required.** EC status: `"1"` = Enrolled, `"0"` = Not enrolled'}}}}}},responses:{200:{description:"Successful response",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_ECSTATUS_CHANGED"]},params:{type:"object",required:["status"],properties:{status:{type:"string",examples:["Enabled"]}}}}},examples:{successResponse:{summary:"Successful Request Example",value:{code:"SUCCESS_ECSTATUS_CHANGED",params:{status:"Enabled"}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",required:["missingProperty"],properties:{missingProperty:{type:"string",examples:["CardRefNum"]}}}}},examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{missingProperty:"CardRefNum"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card not found",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_READTOKEN_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Card not found"]}}}}},examples:{conflictExample:{summary:"Card not found",value:{code:"ERR_READTOKEN_DECLINED",params:{message:"Card not found"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/cards/cardstatus":{post:{operationId:"updateCardStatusByRefNum",tags:["Card Management"],summary:"Update Card Status by Reference Number",description:`Update card status using the card reference number.

**Allowed Statuses:**
- **Active**: Enable card for transactions
- **Deactivated**: Temporarily deactivate the card
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",required:["CardStatus","CardRefNum"],properties:{CardStatus:{type:"string",description:"**Required.** Allowed values â‡’ **Active** | **Deactivated**",enum:["Active","Deactivated"],examples:["Active"]},CardRefNum:{type:"string",description:"**Required.** Unique card reference number"}}}}}},responses:{200:{description:"Successful response",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_CARDSTATUS_CHANGED"]},params:{type:"object",required:["status"],properties:{status:{type:"string",examples:["Active"]}}}}},examples:{successResponse:{summary:"Successful card-status change",value:{code:"SUCCESS_CARDSTATUS_CHANGED",params:{status:"Active"}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Missing required field: CardRefNum"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card declined",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{conflictExample:{summary:"Card declined â€“ token not found",value:{code:"ERR_CARD_DECLINED",params:{message:"Card not found"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/pin/setting_pin":{post:{operationId:"setCardPin",summary:"Set PIN for Card",description:`Set a new PIN for a card using the encrypted PIN block.
`,tags:["PIN Management"],parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/PinSetting"],examples:{default:{value:{Pan:"1234567890123456",PinBlock:"ABC123DEF456"}}}}}},responses:{200:{description:"PIN successfully set",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_PIN_SET"]},params:{type:"object"}}},examples:{successResponse:{summary:"PIN Set Successfully",value:{code:"SUCCESS_PIN_SET",params:{}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",properties:{message:{type:"string",examples:["Invalid PIN block format"]},missingProperty:{type:"string",examples:["Pan"]}}}}},examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{missingProperty:"Pan"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ PIN setting declined",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_PIN_SETTING_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Invalid PIN block format"]}}}}},examples:{conflictExample:{summary:"PIN setting declined",value:{code:"ERR_PIN_SETTING_DECLINED",params:{message:"Invalid PIN block format"}}},invalidPinBlock:{summary:"Invalid PIN block format",value:{code:"ERR_INVALID_PIN_BLOCK",params:{message:"Invalid PIN block format"}}}}}}},500:e["#/components/responses/InternalServerError"],504:{description:"Request timeout",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_TIMEOUT"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Request timeout. Please try again later."]}}}}},examples:{timeoutExample:{summary:"Request timeout",value:{code:"ERR_TIMEOUT",params:{message:"Request timeout. Please try again later."}}}}}}}}}},"/pin/changing_pin":{post:{operationId:"changeCardPin",summary:"Change PIN for Card",description:`Change a card's PIN by providing both the current and new encrypted PIN blocks.
`,tags:["PIN Management"],parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/PinChanging"],examples:{default:{value:{Pan:"1234567890123456",oldPinBlock:"OLD123PIN456",newPinBlock:"NEW789PIN012"}}}}}},responses:{200:{description:"PIN successfully changed",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_PIN_CHANGED"]},params:{type:"object"}}},examples:{successResponse:{summary:"PIN Changed Successfully",value:{code:"SUCCESS_PIN_CHANGED",params:{}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",properties:{missingProperty:{type:"string",examples:["oldPinBlock"]}}}}},examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{missingProperty:"oldPinBlock"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ PIN change declined",content:{"application/json":{schema:{type:"object",required:["code","params"]},properties:{code:{type:"string",examples:["ERR_PIN_CHANGE_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Invalid PIN block format"]}}}},examples:{conflictExample:{summary:"PIN change declined",value:{code:"ERR_PIN_CHANGE_DECLINED",params:{message:"Invalid PIN block format"}}},invalidPinBlock:{summary:"Invalid PIN block format",value:{code:"ERR_INVALID_PIN_BLOCK",params:{message:"Invalid PIN block format"}}}}}}},500:e["#/components/responses/InternalServerError"],504:{description:"Request timeout",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_TIMEOUT"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Request timeout. Please try again later."]}}}}},examples:{timeoutExample:{summary:"Request timeout",value:{code:"ERR_TIMEOUT",params:{message:"Request timeout. Please try again later."}}}}}}}}}},"/cards/cardStatusById":{post:{operationId:"updateCardStatusById",tags:["Card Management"],summary:"Update Card Status by Card ID",description:`Update card status using the internal card ID (TokenId).

**Supported Statuses:**
- **Active**: Enable card for transactions
- **Deactivated**: Temporarily disable the card
- **Blocked**: Block card due to security concerns

**Optional**: Provide a reason for the status change for audit purposes.
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",required:["CardStatus","CardId"],properties:{CardStatus:{type:"string",description:"**Required.** Allowed values â‡’ **Active** | **Deactivated** | **Blocked**",enum:["Active","Deactivated","Blocked"],examples:["Active"]},CardId:{type:"string",description:"**Required.** Unique card ID (token ID)",examples:["12345"]},Reason:{type:"string",description:"Optional reason for status change",examples:["Customer request"]}}}}}},responses:{200:{description:"Card status successfully changed",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_CARDSTATUS_CHANGED"]},params:{type:"object",required:["status"],properties:{status:{type:"string",examples:["Active"]}}}}},examples:{successResponse:{summary:"Successful card-status change",value:{code:"SUCCESS_CARDSTATUS_CHANGED",params:{status:"Active"}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Missing required field: CardId"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card status change declined",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{conflictExample:{summary:"Card declined",value:{code:"ERR_CARD_DECLINED",params:{message:"Card not found"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/cards/card-details/{card_Id}":{get:{operationId:"getCardDetails",tags:["Card Information"],summary:"Get Card Details by Card ID",description:`Retrieve comprehensive card information using the card ID (TokenId).
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"],{name:"card_Id",in:"path",required:!0,description:"Card ID (TokenId) to retrieve details for",schema:{type:"string",examples:["12345"]}}],responses:{200:{description:"Card details successfully retrieved",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_CARD_DETAILS_RETRIEVED"]},params:{type:"object",required:["maskedPan","status","expiryDate","availableBalance","currency"],properties:{maskedPan:{type:"string",description:"Masked Primary Account Number",examples:["123456******1234"]},status:{type:"string",description:"Current card status",examples:["Active"]},expiryDate:{type:"string",format:"date",description:"Card expiry date",examples:["2025-12-31"]},availableBalance:{type:"string",description:"Available balance on the card",examples:["1500.00"]},currency:{type:"string",description:"Currency code or symbol",examples:["USD"]}}}}},examples:{successResponse:{summary:"Successful card details retrieval",value:{code:"SUCCESS_CARD_DETAILS_RETRIEVED",params:{maskedPan:"123456******1234",status:"Active",expiryDate:"2025-12-31",availableBalance:"1500.00",currency:"USD"}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Missing required field",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Missing required field: cardId"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card not found",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{cardNotFound:{summary:"Card not found",value:{code:"ERR_CARD_NOT_FOUND",params:{message:"Card not found"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/customers/listofcards":{post:{operationId:"listCustomerCards",tags:["Card Information"],summary:"List All Customer Cards",description:`Retrieve all cards issued to a customer using their identification document.

**Search By:**
- Passport number, OR National ID number
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",required:["NationalId","Passport"],properties:{Passport:{type:"string",description:"Either NationalId or Passport is required. Customer's passport number",examples:["76238310075"]},NationalId:{type:"string",description:"Either NationalId or Passport is required. Customer's national ID",examples:["1234567890"]}}},examples:{default:{value:{Passport:"76238310075"}}}}}},responses:{200:{description:"Cards successfully retrieved",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_CARDS_RETRIEVED"]},params:{type:"object",required:["totalCards","cards"],properties:{totalCards:{type:"integer",description:"Total number of cards found",examples:[2]},cards:{type:"array",items:{type:"object",properties:{cardId:{type:"string",description:"Card token ID",examples:["12345"]},maskedPan:{type:"string",description:"Masked card PAN",examples:["123456******1234"]},productName:{type:"string",description:"Card product name",examples:["Visa Debit Card"]},status:{type:"string",description:"Card status",examples:["Active"]},expiryDate:{type:"string",format:"date",description:"Card expiry date",examples:["2025-12-31"]}}}}}}}},examples:{successResponse:{summary:"Successful cards retrieval",value:{code:"SUCCESS_CARDS_RETRIEVED",params:{totalCards:2,cards:[{cardId:"12345",maskedPan:"123456******1234",productName:"Visa Debit Card",status:"Active",expiryDate:"2025-12-31"},{cardId:"67890",maskedPan:"123456******5678",productName:"Mastercard Debit",status:"Deactivated",expiryDate:"2026-06-30"}]}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Missing identification document",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Either Passport or NationalId is required"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Customer not found",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{customerNotFound:{summary:"Customer not found",value:{code:"ERR_CUSTOMER_NOT_FOUND",params:{message:"Customer doesn't exist"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/cards/list-of-transactions":{post:{operationId:"getTransactionHistory",tags:["Transactions"],summary:"Get Transaction History",description:`Retrieve detailed transaction history for a card within a specified date range.

**Date Range:** Specify startDate and endDate to filter transactions
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",required:["cardId","startDate","endDate"],properties:{cardId:{type:"string",description:"**Required.** Card Token ID",examples:["12345"]},startDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"**Required.** Start date in YYYY-MM-DD format",examples:["2025-01-01"]},endDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"**Required.** End date in YYYY-MM-DD format",examples:["2025-01-31"]}}},examples:{default:{value:{cardId:"12345",startDate:"2025-01-01",endDate:"2025-01-31"}}}}}},responses:{200:{description:"Transactions successfully retrieved",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_TRANSACTIONS_RETRIEVED"]},params:{type:"object",required:["cardId","startDate","endDate","totalTransactions","transactions"],properties:{cardId:{type:"string",description:"Card ID",examples:["3280"]},startDate:{type:"string",format:"date",description:"Start date of query",examples:["2025-07-01"]},endDate:{type:"string",format:"date",description:"End date of query",examples:["2025-10-02"]},totalTransactions:{type:"integer",description:"Total number of transactions",examples:[31]},transactions:{type:"array",items:{type:"object",required:["transactionId","transactionKind","transactionLabel","transactionType","amount","currency","date","timestamp","terminalOwnerTitle","terminalType"],properties:{transactionId:{type:"string",description:"Unique transaction identifier",examples:["251002511421445346"]},transactionKind:{type:"string",description:"Kind of transaction",examples:["Goods"]},transactionLabel:{type:"string",description:"Transaction label",examples:["Purchase"]},transactionType:{type:"string",description:"Transaction type (Debit/Credit)",examples:["Debit"]},amount:{type:"number",description:"Transaction amount",examples:[45]},currency:{type:"string",description:"Currency code",examples:["USD"]},date:{type:"string",format:"date",description:"Transaction date",examples:["2025-10-02"]},timestamp:{type:"string",format:"date-time",description:"Transaction timestamp",examples:["2025-10-02T14:12:22.000"]},terminalOwnerTitle:{type:"string",description:"Terminal owner/acquirer name",examples:["ACQUIRER NAME"]},terminalType:{type:"string",description:"Type of terminal",examples:["Pos"]}}}}}}}},examples:{successResponse:{summary:"Successful transactions retrieval",value:{code:"SUCCESS_TRANSACTIONS_RETRIEVED",params:{cardId:"3280",startDate:"2025-07-01",endDate:"2025-10-02",totalTransactions:2,transactions:[{transactionId:"251002511421445346",transactionKind:"Goods",transactionLabel:"Purchase",transactionType:"Debit",amount:45,currency:"USD",date:"2025-10-02",timestamp:"2025-10-02T14:12:22.000",terminalOwnerTitle:"ACQUIRER NAME",terminalType:"Pos"},{transactionId:"250925476227641819",transactionKind:"Goods",transactionLabel:"Purchase",transactionType:"Debit",amount:21,currency:"USD",date:"2025-09-25",timestamp:"2025-09-25T13:13:42.000",terminalOwnerTitle:"ACQUIRER NAME",terminalType:"Pos"}]}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Invalid date format",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Invalid startDate format"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ card not found",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_READTOKEN_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Card not found"]}}}}},examples:{conflictExample:{summary:"Card not found",value:{code:"ERR_READTOKEN_DECLINED",params:{message:"Card not found"}}}}}}},500:e["#/components/responses/InternalServerError"],504:e["#/components/responses/LambdaTimeout"]}}},"/cards/create-card":{post:{operationId:"createCardWithOnboarding",tags:["Card Management"],summary:"Create Card",description:`Complete end-to-end card issuance with customer onboarding.

**Supports both New and Existing Customers:**
- **New Customer**: Creates customer profile and issues card
- **Existing Customer**: Links card to existing customer profile

**Process Flow:**
1. **Customer Verification**: Check if customer exists using document ID (NationalId or Passport)
2. **Customer Creation**: Create new customer profile (if new) OR link to existing customer
3. **Card Activation**: Automatically activate the card (status = Active)
4. **Card Details**: Retrieve PAN and calculate CVV2
5. **Notifications**: Set up SMS/Email notifications (if enabled)
`,parameters:[e["#/components/parameters/apiKey"],e["#/components/parameters/contentType"]],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/CreateCardStandard"],examples:{default:{value:{FirstName:"John",LastName:"Doe",MiddleName:"William",BirthDate:"1990-01-15",NationalId:"1234567890",Email:"john.doe@example.com",MobilePhone:"1234567890",StreetTitle:"123 Main Street",Zip:"12345",NotificationStatus:"enabled"}}}}}},responses:{200:{description:"Card successfully created",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_REQUEST_PROCESSED"]},params:{type:"object",required:["customerType","personId","cardId","cardDetails","notificationEnabled"],properties:{customerType:{type:"string",enum:["New","Existing"],description:"Whether customer is new or existing",examples:["New"]},personId:{type:"string",description:"Customer person ID",examples:["PERS12345"]},cardId:{type:"string",description:"Card token ID",examples:["12345"]},cardDetails:{type:"object",required:["pan","cvv2"],properties:{pan:{type:"string",description:"Primary Account Number",examples:["1234567890123456"]},cvv2:{type:"string",description:"Card verification value",examples:["123"]}}},notificationEnabled:{type:"boolean",description:"Whether notifications are enabled",examples:[!0]},notificationStatus:{type:"string",description:"Notification status message (only if already existed)",examples:["Already Enabled"]}}}}},examples:{successResponse:{summary:"Card created successfully",value:{code:"SUCCESS_REQUEST_PROCESSED",params:{customerType:"New",personId:"PERS12345",cardId:"12345",cardDetails:{pan:"1234567890123456",cvv2:"123"},notificationEnabled:!0}}}}}}},400:{description:"Bad request â€“ validation failed",content:{"application/json":{schema:e["#/components/schemas/ValidationError"],examples:{badRequestExample:{summary:"Validation failed",value:{code:"ERR_VALIDATION_FAILED",params:{message:"Invalid Email format"}}}}}}},401:e["#/components/responses/AuthenticationError"],409:{description:"Conflict â€“ operation declined",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{requestDeclined:{summary:"New customer request declined",value:{code:"ERR_REQUEST_DECLINED",params:{message:"New customer request declined"}}},existingGroupDeclined:{summary:"Existing customer group declined",value:{code:"ERR_EXISTING_GROUP_DECLINED",params:{message:"Existing customer group declined"}}},activateCardDeclined:{summary:"Card activation declined",value:{code:"ERR_ACTIVATE_CARD_DECLINED",params:{message:"Card activation declined"}}},notificationDeclined:{summary:"Notification contract declined",value:{code:"ERR_NOTIFICATION_DECLINED",params:{message:"Notification contract declined"}}}}}}},500:{description:"Internal server error",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_INTERNAL_SERVER_ERROR"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["An unexpected error occurred. Please try again later."]}}}}},examples:{internalServerError:{summary:"Internal server error",value:{code:"ERR_INTERNAL_SERVER_ERROR",params:{message:"An unexpected error occurred. Please try again later."}}}}}}},504:e["#/components/responses/LambdaTimeout"]}}}},components:{responses:{LambdaTimeout:{description:"Gateway Timeout â€“ task took too long",content:{"application/json":{schema:{type:"object",required:["errorMessage"],properties:{errorMessage:{type:"string",examples:["Task timed out after 1.10 seconds"]}}},examples:{lambdaTimeout:{summary:"Lambda execution timed out",value:{errorMessage:"Task timed out after 1.10 seconds"}}}}}},AuthenticationError:{description:"Authentication context is missing or invalid",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_AUTH_CONTEXT"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Authentication context is missing"]}}}}},examples:{authError:{summary:"Authentication error",value:{code:"ERR_AUTH_CONTEXT",params:{message:"Authentication context is missing"}}}}}}},ConflictError:{description:"Conflict â€“ operation declined",content:{"application/json":{schema:e["#/components/schemas/ConflictError"],examples:{requestDeclined:{summary:"Operation declined",value:{code:"ERR_REQUEST_DECLINED",params:{message:"Operation was declined"}}}}}}},InternalServerError:{description:"An unexpected error occurred",content:{"application/json":{schema:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_INTERNAL_SERVER_ERROR"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["An unexpected error occurred. Please try again later."]}}}}},examples:{internalError:{summary:"Internal server error",value:{code:"ERR_INTERNAL_SERVER_ERROR",params:{message:"An unexpected error occurred. Please try again later."}}}}}}}},schemas:{SuccessEnvelope:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["SUCCESS_REQUEST_PROCESSED"]},params:{type:"object",required:["requestType"],properties:{requestType:{type:"string",examples:["NewAccountNewCustomer"]}}}}},BadRequest:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",required:["missingProperty"],properties:{missingProperty:{type:"string",examples:["RequestType"]}}}}},CardAlreadyAssigned:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_CARD_ALREADY_ASSIGNED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["This Card Is Already Assigned To A Customer!"]}}}}},Customer:{type:"object",required:["RequestType","AccountNum","CardRefNum","EmbossedName","NationalId","Passport","FirstName","LastName"],properties:{RequestType:{type:"string",description:"**Required.** Request type:\n- `NewAccountNewCustomer`: New customer  \n- `NewAccountExistingCustomer`: Existing customer\n"},CardRefNum:{type:"string",description:"**Required.** Card reference number"},EmbossedName:{type:"string",description:"**Required.** Name to be embossed on the card"},AccountNum:{type:"string",description:"**Required.** Account number to link to the card"},FirstName:{type:"string",description:"**Required for new customers.** Customer's first name"},MiddleName:{type:"string",description:"Optional. Customer's middle name"},LastName:{type:"string",description:"**Required for new customers.** Customer's last name"},NationalId:{type:"string",description:"Either NationalId or Passport is required. Customer's national ID"},Passport:{type:"string",description:"Either NationalId or Passport is required. Customer's passport number"},BirthDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"Date of birth in YYYY-MM-DD format",examples:["1990-01-01"]},Email:{type:"string",format:"email",description:"Customer's email address"},MobilePhone:{type:"string",description:"Customer's mobile phone number"},StreetTitle:{type:"string",description:"Customer's street address"},Zip:{type:"string",description:"Customer's postal code"}}},PinSetting:{type:"object",required:["Pan","PinBlock"],properties:{Pan:{type:"string",description:"**Required.** The Primary Account Number (PAN) of the card",examples:["1234567890123456"]},PinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the new PIN",examples:["ABC123DEF456"]}}},PinChanging:{type:"object",required:["Pan","oldPinBlock","newPinBlock"],properties:{Pan:{type:"string",description:"**Required.** The Primary Account Number (PAN) of the card",examples:["1234567890123456"]},oldPinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the current PIN for verification",examples:["OLD123PIN456"]},newPinBlock:{type:"string",description:"**Required.** The encrypted PIN block containing the new PIN to be set",examples:["NEW789PIN012"]}}},ValidationError:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_VALIDATION_FAILED"]},params:{type:"object",properties:{message:{type:"string",examples:["Missing required field or invalid field format"]},missingProperty:{type:"string",description:"The name of the missing or invalid property",examples:["CardRefNum"]}}}}},ConflictError:{type:"object",required:["code","params"],properties:{code:{type:"string",examples:["ERR_CARD_DECLINED"]},params:{type:"object",required:["message"],properties:{message:{type:"string",examples:["Operation was declined"]}}}}},ServerError:{type:"object",required:["code","params"],properties:{code:{type:"string",enum:["ERR_SUBJECT_ID_NOT_FOUND","ERR_CLIENTID_NOT_FOUND","ERR_INTERNAL_SERVER_ERROR"],examples:["ERR_INTERNAL_SERVER_ERROR"]},params:{type:"object",required:["message"],properties:{message:{examples:["An unexpected error occurred"]}}}}},CreateCardStandard:{type:"object",required:["FirstName","LastName","BirthDate","Email","MobilePhone","StreetTitle","Zip","NotificationStatus","NationalId","Passport"],properties:{FirstName:{type:"string",description:"**Required.** Customer's first name",examples:["John"]},LastName:{type:"string",description:"**Required.** Customer's last name",examples:["Doe"]},MiddleName:{type:"string",description:"Optional. Customer's middle name",examples:["William"]},BirthDate:{type:"string",format:"date",pattern:"^\\d{4}-\\d{2}-\\d{2}$",description:"**Required.** Birth date in YYYY-MM-DD format",examples:["1990-01-15"]},NationalId:{type:"string",description:"Either NationalId or Passport is required. Customer's national ID",examples:["1234567890"]},Passport:{type:"string",description:"Either NationalId or Passport is required. Customer's passport number",examples:["AB1234567"]},Email:{type:"string",format:"email",description:"**Required.** Customer's email address",examples:["john.doe@example.com"]},MobilePhone:{type:"string",description:"**Required.** Customer's mobile phone number",examples:["1234567890"]},StreetTitle:{type:"string",description:"**Required.** Customer's street address",examples:["123 Main Street"]},Zip:{type:"string",description:"**Required.** Customer's postal code",examples:["12345"]},NotificationStatus:{type:"string",enum:["enabled","disabled"],description:"**Required.** Notification preference - enabled or disabled",examples:["enabled"]}}}},parameters:{apiKey:{name:"x-api-key",in:"header",required:!0,schema:{type:"string"},description:"API key for authentication"},contentType:{name:"Content-Type",in:"header",required:!0,schema:{type:"string",default:"application/json"},description:"Content type of the request body"}}}};export{s as schema};
//# sourceMappingURL=generalapi.yaml-B8TeUh_5.js.map
