{"version":3,"file":"generalapi.yaml-PQhpHZ30.js","sources":["../../../node_modules/.zudoku/processed/generalapi.yaml.js"],"sourcesContent":["const __refs = Array.from({ length: 14 }, () => ({}));\nconst __refMap = {\n  \"#/components/parameters/apiKey\": __refs[0],\n  \"#/components/parameters/contentType\": __refs[1],\n  \"#/components/schemas/ValidationError\": __refs[2],\n  \"#/components/responses/AuthenticationError\": __refs[3],\n  \"#/components/responses/InternalServerError\": __refs[4],\n  \"#/components/schemas/ConflictError\": __refs[5],\n  \"#/components/responses/LambdaTimeout\": __refs[6],\n  \"#/components/schemas/Customer\": __refs[7],\n  \"#/components/schemas/SuccessEnvelope\": __refs[8],\n  \"#/components/schemas/BadRequest\": __refs[9],\n  \"#/components/schemas/CardAlreadyAssigned\": __refs[10],\n  \"#/components/schemas/PinSetting\": __refs[11],\n  \"#/components/schemas/PinChanging\": __refs[12],\n  \"#/components/schemas/CreateCardStandard\": __refs[13]\n};\nObject.assign(__refs[0], {\n  \"name\": \"x-api-key\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\"\n  },\n  \"description\": \"API key for authentication\"\n});\nObject.assign(__refs[1], {\n  \"name\": \"Content-Type\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"default\": \"application/json\"\n  },\n  \"description\": \"Content type of the request body\"\n});\nObject.assign(__refs[2], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_VALIDATION_FAILED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"Missing required field or invalid field format\"\n          ]\n        },\n        \"missingProperty\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the missing or invalid property\",\n          \"examples\": [\n            \"cardRefNum\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[3], {\n  \"description\": \"Authentication context is missing or invalid\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_AUTH_CONTEXT\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"Authentication context is missing\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"examples\": {\n        \"authError\": {\n          \"summary\": \"Authentication error\",\n          \"value\": {\n            \"code\": \"ERR_AUTH_CONTEXT\",\n            \"params\": {\n              \"message\": \"Authentication context is missing\"\n            }\n          }\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[4], {\n  \"description\": \"An unexpected error occurred\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_INTERNAL_SERVER_ERROR\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"An unexpected error occurred. Please try again later.\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"examples\": {\n        \"internalError\": {\n          \"summary\": \"Internal server error\",\n          \"value\": {\n            \"code\": \"ERR_INTERNAL_SERVER_ERROR\",\n            \"params\": {\n              \"message\": \"An unexpected error occurred. Please try again later.\"\n            }\n          }\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[5], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_CARD_DECLINED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"Operation was declined\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[6], {\n  \"description\": \"Gateway Timeout â€“ task took too long\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"errorMessage\"\n        ],\n        \"properties\": {\n          \"errorMessage\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"Task timed out after 1.10 seconds\"\n            ]\n          }\n        }\n      },\n      \"examples\": {\n        \"lambdaTimeout\": {\n          \"summary\": \"Lambda execution timed out\",\n          \"value\": {\n            \"errorMessage\": \"Task timed out after 1.10 seconds\"\n          }\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[7], {\n  \"type\": \"object\",\n  \"required\": [\n    \"requestType\",\n    \"accountNum\",\n    \"cardRefNum\",\n    \"embossedName\",\n    \"nationalId\",\n    \"passport\",\n    \"firstName\",\n    \"lastName\"\n  ],\n  \"properties\": {\n    \"requestType\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** Request type:\\n- `NewAccountNewCustomer`: New customer  \\n- `NewAccountExistingCustomer`: Existing customer\\n\"\n    },\n    \"cardRefNum\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** Card reference number\"\n    },\n    \"embossedName\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** Name to be embossed on the card\"\n    },\n    \"accountNum\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** Account number to link to the card\"\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"**Required for new customers.** Customer's first name\"\n    },\n    \"middleName\": {\n      \"type\": \"string\",\n      \"description\": \"Optional. Customer's middle name\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"**Required for new customers.** Customer's last name\"\n    },\n    \"nationalId\": {\n      \"type\": \"string\",\n      \"description\": \"Either nationalId or passport is required. Customer's national ID\"\n    },\n    \"passport\": {\n      \"type\": \"string\",\n      \"description\": \"Either nationalId or passport is required. Customer's passport number\"\n    },\n    \"birthDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\",\n      \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n      \"description\": \"Date of birth in YYYY-MM-DD format\",\n      \"examples\": [\n        \"1990-01-01\"\n      ]\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"description\": \"Customer's email address\"\n    },\n    \"mobilePhone\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's mobile phone number\"\n    },\n    \"streetTitle\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's street address\"\n    },\n    \"zip\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's postal code\"\n    }\n  }\n});\nObject.assign(__refs[8], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"SUCCESS_REQUEST_PROCESSED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"requestType\"\n      ],\n      \"properties\": {\n        \"requestType\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"NewAccountNewCustomer\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[9], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_VALIDATION_FAILED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"missingProperty\"\n      ],\n      \"properties\": {\n        \"missingProperty\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"requestType\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[10], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_CARD_ALREADY_ASSIGNED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"This Card Is Already Assigned To A Customer!\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[11], {\n  \"type\": \"object\",\n  \"required\": [\n    \"pan\",\n    \"pinBlock\"\n  ],\n  \"properties\": {\n    \"pan\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** The Primary Account Number (PAN) of the card\",\n      \"examples\": [\n        \"1234567890123456\"\n      ]\n    },\n    \"pinBlock\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** The encrypted PIN block containing the new PIN\",\n      \"examples\": [\n        \"ABC123DEF456\"\n      ]\n    }\n  }\n});\nObject.assign(__refs[12], {\n  \"type\": \"object\",\n  \"required\": [\n    \"pan\",\n    \"oldPinBlock\",\n    \"newPinBlock\"\n  ],\n  \"properties\": {\n    \"pan\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** The Primary Account Number (PAN) of the card\",\n      \"examples\": [\n        \"1234567890123456\"\n      ]\n    },\n    \"oldPinBlock\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** The encrypted PIN block containing the current PIN for verification\",\n      \"examples\": [\n        \"OLD123PIN456\"\n      ]\n    },\n    \"newPinBlock\": {\n      \"type\": \"string\",\n      \"description\": \"**Required.** The encrypted PIN block containing the new PIN to be set\",\n      \"examples\": [\n        \"NEW789PIN012\"\n      ]\n    }\n  }\n});\nObject.assign(__refs[13], {\n  \"type\": \"object\",\n  \"required\": [\n    \"requestType\"\n  ],\n  \"properties\": {\n    \"requestType\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"NewAccountNewCustomer\",\n        \"NewAccountExistingCustomer\"\n      ],\n      \"description\": \"**Required.** Type of request - NewAccountNewCustomer or NewAccountExistingCustomer\",\n      \"examples\": [\n        \"NewAccountNewCustomer\"\n      ]\n    },\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"**Required for NewAccountNewCustomer.** Customer's first name\",\n      \"examples\": [\n        \"John\"\n      ]\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"**Required for NewAccountNewCustomer.** Customer's last name\",\n      \"examples\": [\n        \"Doe\"\n      ]\n    },\n    \"middleName\": {\n      \"type\": \"string\",\n      \"description\": \"Optional. Customer's middle name\",\n      \"examples\": [\n        \"William\"\n      ]\n    },\n    \"birthDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\",\n      \"pattern\": \"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$\",\n      \"description\": \"Birth date in YYYY-MM-DD format\",\n      \"examples\": [\n        \"1990-01-15\"\n      ]\n    },\n    \"nationalId\": {\n      \"type\": \"string\",\n      \"description\": \"Either nationalId or passport or id is required. Customer's national ID\",\n      \"examples\": [\n        \"1234567890\"\n      ]\n    },\n    \"passport\": {\n      \"type\": \"string\",\n      \"description\": \"Either nationalId or passport or id is required. Customer's passport number\",\n      \"examples\": [\n        \"AB1234567\"\n      ]\n    },\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Either nationalId or passport or id is required. Customer's ID\",\n      \"examples\": [\n        \"ID123456\"\n      ]\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"pattern\": \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\",\n      \"description\": \"Customer's email address\",\n      \"examples\": [\n        \"john.doe@example.com\"\n      ]\n    },\n    \"mobilePhone\": {\n      \"type\": \"string\",\n      \"description\": \"**Required for NewAccountNewCustomer.** Customer's mobile phone number\",\n      \"examples\": [\n        \"1234567890\"\n      ]\n    },\n    \"streetTitle\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's street address\",\n      \"examples\": [\n        \"123 Main Street\"\n      ]\n    },\n    \"zip\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's postal code\",\n      \"examples\": [\n        \"12345\"\n      ]\n    },\n    \"notificationStatus\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"enabled\",\n        \"disabled\"\n      ],\n      \"description\": \"Notification preference - enabled or disabled\",\n      \"examples\": [\n        \"enabled\"\n      ]\n    }\n  }\n});\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Enza REST API Documentation\",\n    \"description\": \"**Welcome to the Enza REST API Developer Portal**\\n\\nOur API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities.\\n\\n## Key Features\\n- **Instant Card Issuance**: Issue physical and virtual cards in real-time\\n- **Card Management**: Complete lifecycle management from creation to closure\\n- **Transaction Monitoring**: Real-time transaction tracking and reporting\\n- **PIN Management**: Secure PIN operations for enhanced security\\n- **E-Commerce Controls**: Manage online transaction capabilities\\n\\n## Getting Started\\nAll API requests require:\\n- `x-api-key` is required for authentication\\n\\nBase URL: `https://uat-api.enza.cloud/TX/v1`\\n\",\n    \"version\": \"2025-02-16T14:26:47Z\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://uat-api.enza.cloud/TX/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Card Management\",\n      \"description\": \"Operations for creating, activating, and managing card status\"\n    },\n    {\n      \"name\": \"Card Information\",\n      \"description\": \"Retrieve card details and customer card information\"\n    },\n    {\n      \"name\": \"Customer Management\",\n      \"description\": \"Retrieve and manage customer information\"\n    },\n    {\n      \"name\": \"Transactions\",\n      \"description\": \"View and manage card transaction history\"\n    },\n    {\n      \"name\": \"E-Commerce\",\n      \"description\": \"Manage e-commerce and online transaction settings\"\n    },\n    {\n      \"name\": \"PIN Management\",\n      \"description\": \"Set and change card PINs securely\"\n    },\n    {\n      \"name\": \"Instant Issuing\",\n      \"description\": \"Instant card issuance for new and existing customers\"\n    }\n  ],\n  \"paths\": {\n    \"/customers/check\": {\n      \"post\": {\n        \"operationId\": \"checkCustomerExistence\",\n        \"summary\": \"Check Customer Existence\",\n        \"description\": \"Check if a customer exists in the system or not.\\n\\n**Search By:**\\n- National ID number, OR\\n- Passport number, OR\\n- ID number\\n\",\n        \"tags\": [\n          \"Customer Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"nationalId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's national ID\",\n                    \"examples\": [\n                      \"1234567890\"\n                    ]\n                  },\n                  \"passport\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's passport number\",\n                    \"examples\": [\n                      \"AB1234567\"\n                    ]\n                  },\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's ID\",\n                    \"examples\": [\n                      \"ID123456\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"withNationalId\": {\n                  \"summary\": \"Check by National ID\",\n                  \"value\": {\n                    \"nationalId\": \"1234567890\"\n                  }\n                },\n                \"withPassport\": {\n                  \"summary\": \"Check by Passport\",\n                  \"value\": {\n                    \"passport\": \"AB1234567\"\n                  }\n                },\n                \"withId\": {\n                  \"summary\": \"Check by ID\",\n                  \"value\": {\n                    \"id\": \"ID123456\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Customer exists in the system\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CUSTOMER_CHECK\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"exists\",\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"exists\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Whether the customer exists in the system\",\n                          \"examples\": [\n                            true\n                          ]\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"description\": \"Success message\",\n                          \"examples\": [\n                            \"Customer exists\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"customerExists\": {\n                    \"summary\": \"Customer exists in system\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CUSTOMER_CHECK\",\n                      \"params\": {\n                        \"exists\": true,\n                        \"message\": \"Customer exists\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"missingDocumentId\": {\n                    \"summary\": \"Missing document ID\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"One of the following fields is required: nationalId, passport, id\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Customer not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_CUSTOMER_NOT_FOUND\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"exists\",\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"exists\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Whether the customer exists in the system\",\n                          \"examples\": [\n                            false\n                          ]\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Customer not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"customerNotFound\": {\n                    \"summary\": \"Customer does not exist\",\n                    \"value\": {\n                      \"code\": \"ERR_CUSTOMER_NOT_FOUND\",\n                      \"params\": {\n                        \"exists\": false,\n                        \"message\": \"Customer not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"]\n        }\n      }\n    },\n    \"/customers/details\": {\n      \"post\": {\n        \"operationId\": \"getCustomerDetails\",\n        \"summary\": \"Get Customer Details\",\n        \"description\": \"Retrieve comprehensive customer details by National ID, Passport, or ID.\\n\\n**Search By:**\\n- National ID number, OR\\n- Passport number, OR\\n- ID number\\n\",\n        \"tags\": [\n          \"Customer Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"nationalId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's national ID\",\n                    \"examples\": [\n                      \"NAT123456\"\n                    ]\n                  },\n                  \"passport\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's passport number\",\n                    \"examples\": [\n                      \"passport03\"\n                    ]\n                  },\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's ID\",\n                    \"examples\": [\n                      \"ID123456\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"withPassport\": {\n                  \"summary\": \"Search by Passport\",\n                  \"value\": {\n                    \"passport\": \"passport03\"\n                  }\n                },\n                \"withNationalId\": {\n                  \"summary\": \"Search by National ID\",\n                  \"value\": {\n                    \"nationalId\": \"NAT123456\"\n                  }\n                },\n                \"withId\": {\n                  \"summary\": \"Search by ID\",\n                  \"value\": {\n                    \"id\": \"ID123456\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Customer details successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CUSTOMER_DETAILS_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"firstName\",\n                        \"lastName\",\n                        \"birthDate\",\n                        \"status\",\n                        \"email\",\n                        \"mobilePhone\"\n                      ],\n                      \"properties\": {\n                        \"firstName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer first name\",\n                          \"examples\": [\n                            \"omnia\"\n                          ]\n                        },\n                        \"middleName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer middle name\",\n                          \"examples\": [\n                            \"API\"\n                          ]\n                        },\n                        \"lastName\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer last name\",\n                          \"examples\": [\n                            \"Testing\"\n                          ]\n                        },\n                        \"birthDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\",\n                          \"description\": \"Date of birth\",\n                          \"examples\": [\n                            \"1989-12-31T19:00:00.000\"\n                          ]\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer status (N=Normal)\",\n                          \"examples\": [\n                            \"N\"\n                          ]\n                        },\n                        \"email\": {\n                          \"type\": \"string\",\n                          \"format\": \"email\",\n                          \"description\": \"Primary email address\",\n                          \"examples\": [\n                            \"a@a.com\"\n                          ]\n                        },\n                        \"mobilePhone\": {\n                          \"type\": \"string\",\n                          \"description\": \"Primary mobile phone\",\n                          \"examples\": [\n                            \"01158900152\"\n                          ]\n                        },\n                        \"homeAddress\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"streetTitle\": {\n                              \"type\": \"string\",\n                              \"description\": \"Street address\",\n                              \"examples\": [\n                                \"asd\"\n                              ]\n                            },\n                            \"zip\": {\n                              \"type\": \"string\",\n                              \"description\": \"Postal code\",\n                              \"examples\": [\n                                \"11728\"\n                              ]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Customer details retrieved successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CUSTOMER_DETAILS_RETRIEVED\",\n                      \"params\": {\n                        \"firstName\": \"omnia\",\n                        \"middleName\": \"API\",\n                        \"lastName\": \"Testing\",\n                        \"birthDate\": \"1989-12-31T19:00:00.000\",\n                        \"status\": \"N\",\n                        \"email\": \"a@a.com\",\n                        \"mobilePhone\": \"01158900152\",\n                        \"homeAddress\": {\n                          \"streetTitle\": \"asd\",\n                          \"zip\": \"11728\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required fields\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Both nationalId and passport are required\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Customer not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"customerNotFound\": {\n                    \"summary\": \"Customer not found\",\n                    \"value\": {\n                      \"code\": \"ERR_REQUEST_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Customer not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/instant-issuing\": {\n      \"post\": {\n        \"operationId\": \"instantIssueCard\",\n        \"summary\": \"Instant Issue Card\",\n        \"description\": \"Instantly issue a card for a new or existing customer.\\n\\nThis endpoint handles two scenarios:\\n\\n| Scenario                | RequestType Value           |\\n|-------------------------|-----------------------------|\\n| New customer            | `NewAccountNewCustomer`     |\\n| Existing customer       | `NewAccountExistingCustomer`|\\n\",\n        \"tags\": [\n          \"Instant Issuing\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Customer\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"requestType\": \"NewAccountNewCustomer\",\n                    \"lastName\": \"EEE\",\n                    \"firstName\": \"Cust02\",\n                    \"birthDate\": \"1990-01-20\",\n                    \"passport\": \"76238310075\",\n                    \"email\": \"test@test.com\",\n                    \"mobilePhone\": \"9991234567\",\n                    \"streetTitle\": \"Baker's Str\",\n                    \"zip\": \"WC1X 9NX\",\n                    \"accountNum\": \"AAABBB150573\",\n                    \"cardRefNum\": \"000515\",\n                    \"embossedName\": \"Cust02 New\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/SuccessEnvelope\"],\n                \"examples\": {\n                  \"directSuccess\": {\n                    \"summary\": \"Direct success example\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_REQUEST_PROCESSED\",\n                      \"params\": {\n                        \"requestType\": \"NewAccountNewCustomer\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/BadRequest\"],\n                \"examples\": {\n                  \"validationFailure\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"requestType\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card already assigned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/CardAlreadyAssigned\"],\n                \"examples\": {\n                  \"conflictError\": {\n                    \"summary\": \"Card already assigned example\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_ALREADY_ASSIGNED\",\n                      \"params\": {\n                        \"message\": \"This Card Is Already Assigned To A Customer!\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Timeout error message\",\n                      \"examples\": [\n                        \"Task timed out after 1.10 seconds\"\n                      ]\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"lambdaTimeout\": {\n                    \"summary\": \"Lambda execution timed out\",\n                    \"value\": {\n                      \"errorMessage\": \"Task timed out after 1.10 seconds\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/tds-enrollment\": {\n      \"post\": {\n        \"operationId\": \"updateEcommerceStatus\",\n        \"summary\": \"Enable or Disable E-Commerce Transactions\",\n        \"description\": \"Control e-commerce (online) transaction capabilities for a card.\\n\",\n        \"tags\": [\n          \"E-Commerce\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for updating ECstatus of a card.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"ecStatusEnable\",\n                  \"cardRefNum\"\n                ],\n                \"properties\": {\n                  \"cardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Card reference number\"\n                  },\n                  \"ecStatusEnable\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** EC status: `\\\"1\\\"` = Enrolled, `\\\"0\\\"` = Not enrolled\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_ECSTATUS_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"status\"\n                      ],\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Enabled\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Request Example\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_ECSTATUS_CHANGED\",\n                      \"params\": {\n                        \"status\": \"Enabled\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_VALIDATION_FAILED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"missingProperty\"\n                      ],\n                      \"properties\": {\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"cardRefNum\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"cardRefNum\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_READTOKEN_DECLINED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Card not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_READTOKEN_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/update-status-by-ref\": {\n      \"post\": {\n        \"operationId\": \"updateCardStatusByRefNum\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"summary\": \"Update Card Status by Reference Number\",\n        \"description\": \"Update card status using the card reference number.\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardStatus\",\n                  \"cardRefNum\"\n                ],\n                \"properties\": {\n                  \"cardStatus\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Allowed values â‡’ **Active** | **Deactivated**\",\n                    \"enum\": [\n                      \"Active\",\n                      \"Deactivated\"\n                    ],\n                    \"examples\": [\n                      \"Active\"\n                    ]\n                  },\n                  \"cardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Unique card reference number\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARDSTATUS_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"status\"\n                      ],\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Active\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful card-status change\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARDSTATUS_CHANGED\",\n                      \"params\": {\n                        \"status\": \"Active\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Missing required field: cardRefNum\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Card declined â€“ Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/pin/set\": {\n      \"post\": {\n        \"operationId\": \"setCardPin\",\n        \"summary\": \"Set PIN for Card\",\n        \"description\": \"Set a new PIN for a card using the encrypted PIN block.\\n\",\n        \"tags\": [\n          \"PIN Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/PinSetting\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"pan\": \"1234567890123456\",\n                    \"pinBlock\": \"ABC123DEF456\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"PIN successfully set\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_PIN_SET\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"PIN Set Successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_PIN_SET\",\n                      \"params\": {}\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_VALIDATION_FAILED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Invalid PIN block format\"\n                          ]\n                        },\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"pan\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"pan\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ PIN setting declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_PIN_SETTING_DECLINED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Invalid PIN block format\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"PIN setting declined\",\n                    \"value\": {\n                      \"code\": \"ERR_PIN_SETTING_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Invalid PIN block format\"\n                      }\n                    }\n                  },\n                  \"invalidPinBlock\": {\n                    \"summary\": \"Invalid PIN block format\",\n                    \"value\": {\n                      \"code\": \"ERR_INVALID_PIN_BLOCK\",\n                      \"params\": {\n                        \"message\": \"Invalid PIN block format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": {\n            \"description\": \"Request timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_TIMEOUT\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Request timeout. Please try again later.\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"timeoutExample\": {\n                    \"summary\": \"Request timeout\",\n                    \"value\": {\n                      \"code\": \"ERR_TIMEOUT\",\n                      \"params\": {\n                        \"message\": \"Request timeout. Please try again later.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/retrieve-pin-block\": {\n      \"post\": {\n        \"operationId\": \"retrievePinBlock\",\n        \"summary\": \"Retrieve PIN Block for Card\",\n        \"description\": \"Retrieve the encrypted PIN block for a card.\\n\\n**Note:** If the PIN block is not stored or restricted by policy, an error will be returned.\\n\",\n        \"tags\": [\n          \"PIN Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardId\"\n                ],\n                \"properties\": {\n                  \"cardId\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Card ID\",\n                    \"examples\": [\n                      \"12345\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"cardId\": \"12345\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"PIN block successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_PIN_BLOCK_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"cardId\",\n                        \"pinBlock\"\n                      ],\n                      \"properties\": {\n                        \"cardId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Card ID\",\n                          \"examples\": [\n                            \"12345\"\n                          ]\n                        },\n                        \"pinBlock\": {\n                          \"type\": \"string\",\n                          \"description\": \"Encrypted PIN block\",\n                          \"examples\": [\n                            \"ABC123DEF456\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"PIN block retrieved successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_PIN_BLOCK_RETRIEVED\",\n                      \"params\": {\n                        \"cardId\": \"12345\",\n                        \"pinBlock\": \"ABC123DEF456\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Missing required field: cardId\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ request declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_PIN_BLOCK_NOT_AVAILABLE\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"PIN block is not available\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"pinBlockNotAvailable\": {\n                    \"summary\": \"PIN block not available\",\n                    \"value\": {\n                      \"code\": \"ERR_PIN_BLOCK_NOT_AVAILABLE\",\n                      \"params\": {\n                        \"message\": \"PIN block is not available. Either the value isn't stored or your response is restricted by policy\"\n                      }\n                    }\n                  },\n                  \"pinBlockNotFound\": {\n                    \"summary\": \"PIN block not found\",\n                    \"value\": {\n                      \"code\": \"ERR_PIN_BLOCK_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"PIN block not found for this card\"\n                      }\n                    }\n                  },\n                  \"cardNotFound\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"Card\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/pin/change\": {\n      \"post\": {\n        \"operationId\": \"changeCardPin\",\n        \"summary\": \"Change PIN for Card\",\n        \"description\": \"Change a card's PIN by providing both the current and new encrypted PIN blocks.\\n\",\n        \"tags\": [\n          \"PIN Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/PinChanging\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"pan\": \"1234567890123456\",\n                    \"oldPinBlock\": \"OLD123PIN456\",\n                    \"newPinBlock\": \"NEW789PIN012\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"PIN successfully changed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_PIN_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"PIN Changed Successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_PIN_CHANGED\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_VALIDATION_FAILED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"oldPinBlock\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"oldPinBlock\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ PIN change declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ]\n                },\n                \"properties\": {\n                  \"code\": {\n                    \"type\": \"string\",\n                    \"examples\": [\n                      \"ERR_PIN_CHANGE_DECLINED\"\n                    ]\n                  },\n                  \"params\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                      \"message\"\n                    ],\n                    \"properties\": {\n                      \"message\": {\n                        \"type\": \"string\",\n                        \"examples\": [\n                          \"Invalid PIN block format\"\n                        ]\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"PIN change declined\",\n                    \"value\": {\n                      \"code\": \"ERR_PIN_CHANGE_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Invalid PIN block format\"\n                      }\n                    }\n                  },\n                  \"invalidPinBlock\": {\n                    \"summary\": \"Invalid PIN block format\",\n                    \"value\": {\n                      \"code\": \"ERR_INVALID_PIN_BLOCK\",\n                      \"params\": {\n                        \"message\": \"Invalid PIN block format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": {\n            \"description\": \"Request timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_TIMEOUT\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Request timeout. Please try again later.\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"timeoutExample\": {\n                    \"summary\": \"Request timeout\",\n                    \"value\": {\n                      \"code\": \"ERR_TIMEOUT\",\n                      \"params\": {\n                        \"message\": \"Request timeout. Please try again later.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/update-status-by-id\": {\n      \"post\": {\n        \"operationId\": \"updateCardStatusById\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"summary\": \"Update Card Status by Card ID\",\n        \"description\": \"Update card status using the card ID.\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardStatus\",\n                  \"cardId\"\n                ],\n                \"properties\": {\n                  \"cardStatus\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Allowed values â‡’ **Active** | **Deactivated** | **Blocked**\",\n                    \"enum\": [\n                      \"Active\",\n                      \"Deactivated\",\n                      \"Blocked\"\n                    ],\n                    \"examples\": [\n                      \"Active\"\n                    ]\n                  },\n                  \"cardId\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Unique card ID\",\n                    \"examples\": [\n                      \"12345\"\n                    ]\n                  },\n                  \"reason\": {\n                    \"type\": \"string\",\n                    \"description\": \"Optional reason for status change\",\n                    \"examples\": [\n                      \"Customer request\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card status successfully changed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARDSTATUS_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"status\"\n                      ],\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Active\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful card-status change\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARDSTATUS_CHANGED\",\n                      \"params\": {\n                        \"status\": \"Active\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Missing required field: cardId\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card status change declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Card declined\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/card-details/{card_Id}\": {\n      \"get\": {\n        \"operationId\": \"getCardDetails\",\n        \"tags\": [\n          \"Card Information\"\n        ],\n        \"summary\": \"Get Card Details by Card ID\",\n        \"description\": \"Retrieve comprehensive card information using the card ID.\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"],\n          {\n            \"name\": \"card_Id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Card ID to retrieve details for\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"examples\": [\n                \"12345\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card details successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARD_DETAILS_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"maskedPan\",\n                        \"status\",\n                        \"expiryDate\",\n                        \"availableBalance\",\n                        \"currency\"\n                      ],\n                      \"properties\": {\n                        \"maskedPan\": {\n                          \"type\": \"string\",\n                          \"description\": \"Masked Primary Account Number\",\n                          \"examples\": [\n                            \"123456******1234\"\n                          ]\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"description\": \"Current card status\",\n                          \"examples\": [\n                            \"Active\"\n                          ]\n                        },\n                        \"expiryDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"description\": \"Card expiry date\",\n                          \"examples\": [\n                            \"2025-12-31\"\n                          ]\n                        },\n                        \"availableBalance\": {\n                          \"type\": \"string\",\n                          \"description\": \"Available balance on the card\",\n                          \"examples\": [\n                            \"1500.00\"\n                          ]\n                        },\n                        \"currency\": {\n                          \"type\": \"string\",\n                          \"description\": \"Currency code or symbol\",\n                          \"examples\": [\n                            \"USD\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful card details retrieval\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARD_DETAILS_RETRIEVED\",\n                      \"params\": {\n                        \"maskedPan\": \"123456******1234\",\n                        \"status\": \"Active\",\n                        \"expiryDate\": \"2025-12-31\",\n                        \"availableBalance\": \"1500.00\",\n                        \"currency\": \"USD\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Missing required field: cardId\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"cardNotFound\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"Card not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/customers/list-of-cards\": {\n      \"post\": {\n        \"operationId\": \"listCustomerCards\",\n        \"tags\": [\n          \"Card Information\"\n        ],\n        \"summary\": \"List All Customer Cards\",\n        \"description\": \"Retrieve all cards issued to a customer using their identification document.\\n\\n**Search By:**\\n- Passport number, OR\\n- National ID number, OR\\n- ID number\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"passport\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's passport number\",\n                    \"examples\": [\n                      \"76238310075\"\n                    ]\n                  },\n                  \"nationalId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's national ID\",\n                    \"examples\": [\n                      \"1234567890\"\n                    ]\n                  },\n                  \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either nationalId, passport, or id is required. Customer's ID\",\n                    \"examples\": [\n                      \"ID123456\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"withPassport\": {\n                  \"summary\": \"Search by Passport\",\n                  \"value\": {\n                    \"passport\": \"76238310075\"\n                  }\n                },\n                \"withNationalId\": {\n                  \"summary\": \"Search by National ID\",\n                  \"value\": {\n                    \"nationalId\": \"1234567890\"\n                  }\n                },\n                \"withId\": {\n                  \"summary\": \"Search by ID\",\n                  \"value\": {\n                    \"id\": \"ID123456\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Cards successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARDS_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"totalCards\",\n                        \"cards\"\n                      ],\n                      \"properties\": {\n                        \"totalCards\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Total number of cards found\",\n                          \"examples\": [\n                            2\n                          ]\n                        },\n                        \"cards\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"cardId\": {\n                                \"type\": \"string\",\n                                \"description\": \"Card ID\",\n                                \"examples\": [\n                                  \"12345\"\n                                ]\n                              },\n                              \"maskedPan\": {\n                                \"type\": \"string\",\n                                \"description\": \"Masked card PAN\",\n                                \"examples\": [\n                                  \"123456******1234\"\n                                ]\n                              },\n                              \"productName\": {\n                                \"type\": \"string\",\n                                \"description\": \"Card product name\",\n                                \"examples\": [\n                                  \"Visa Debit Card\"\n                                ]\n                              },\n                              \"status\": {\n                                \"type\": \"string\",\n                                \"description\": \"Card status\",\n                                \"examples\": [\n                                  \"Active\"\n                                ]\n                              },\n                              \"expiryDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\",\n                                \"description\": \"Card expiry date\",\n                                \"examples\": [\n                                  \"2025-12-31\"\n                                ]\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful cards retrieval\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARDS_RETRIEVED\",\n                      \"params\": {\n                        \"totalCards\": 2,\n                        \"cards\": [\n                          {\n                            \"cardId\": \"12345\",\n                            \"maskedPan\": \"123456******1234\",\n                            \"productName\": \"Visa Debit Card\",\n                            \"status\": \"Active\",\n                            \"expiryDate\": \"2025-12-31\"\n                          },\n                          {\n                            \"cardId\": \"67890\",\n                            \"maskedPan\": \"123456******5678\",\n                            \"productName\": \"Mastercard Debit\",\n                            \"status\": \"Deactivated\",\n                            \"expiryDate\": \"2026-06-30\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing identification document\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Either passport or nationalId is required\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Customer not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"customerNotFound\": {\n                    \"summary\": \"Customer not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CUSTOMER_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"Customer doesn't exist\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/delete-card\": {\n      \"post\": {\n        \"operationId\": \"deleteCard\",\n        \"summary\": \"Delete Card\",\n        \"description\": \"Permanently delete a card using either its card ID or external RID.\\n\\n**Warning:** This operation is irreversible. The card will be permanently removed from the system.\\n\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardId\",\n                  \"extRid\"\n                ],\n                \"properties\": {\n                  \"cardId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either cardId or extRid is required. Card ID to delete\",\n                    \"examples\": [\n                      \"3255\"\n                    ]\n                  },\n                  \"extRid\": {\n                    \"type\": \"string\",\n                    \"description\": \"Either cardId or extRid is required. External RID to delete card\",\n                    \"examples\": [\n                      \"TestVenCorporate1\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"deleteByCardId\": {\n                  \"summary\": \"Delete by Card ID\",\n                  \"value\": {\n                    \"cardId\": \"3255\"\n                  }\n                },\n                \"deleteByExtRid\": {\n                  \"summary\": \"Delete by External RID\",\n                  \"value\": {\n                    \"extRid\": \"TestVenCorporate1\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card successfully deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARD_DELETED\"\n                      ]\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Card deleted successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARD_DELETED\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"One of the following fields is required: cardId, extRid\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card not found or cannot be deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_CARD_NOT_FOUND\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Card not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"cardNotFound\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"Card\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/list-of-transactions\": {\n      \"post\": {\n        \"operationId\": \"getTransactionHistory\",\n        \"tags\": [\n          \"Transactions\"\n        ],\n        \"summary\": \"Get Transaction History\",\n        \"description\": \"Retrieve detailed transaction history for a card within a specified date range.\\n\\n**Date Range:** Specify startDate and endDate to filter transactions\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardId\",\n                  \"startDate\",\n                  \"endDate\"\n                ],\n                \"properties\": {\n                  \"cardId\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Card ID\",\n                    \"examples\": [\n                      \"12345\"\n                    ]\n                  },\n                  \"startDate\": {\n                    \"type\": \"string\",\n                    \"format\": \"date\",\n                    \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n                    \"description\": \"**Required.** Start date in YYYY-MM-DD format\",\n                    \"examples\": [\n                      \"2025-01-01\"\n                    ]\n                  },\n                  \"endDate\": {\n                    \"type\": \"string\",\n                    \"format\": \"date\",\n                    \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n                    \"description\": \"**Required.** End date in YYYY-MM-DD format\",\n                    \"examples\": [\n                      \"2025-01-31\"\n                    ]\n                  },\n                  \"transactionCount\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"maximum\": 100,\n                    \"description\": \"Optional. Maximum number of transactions to return (1-100)\",\n                    \"examples\": [\n                      2\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"cardId\": \"12345\",\n                    \"startDate\": \"2025-01-01\",\n                    \"endDate\": \"2025-01-31\",\n                    \"transactionCount\": 2\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Transactions successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_TRANSACTIONS_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"cardId\",\n                        \"startDate\",\n                        \"endDate\",\n                        \"totalTransactions\",\n                        \"transactions\"\n                      ],\n                      \"properties\": {\n                        \"cardId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Card ID\",\n                          \"examples\": [\n                            \"3280\"\n                          ]\n                        },\n                        \"startDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"description\": \"Start date of query\",\n                          \"examples\": [\n                            \"2025-07-01\"\n                          ]\n                        },\n                        \"endDate\": {\n                          \"type\": \"string\",\n                          \"format\": \"date\",\n                          \"description\": \"End date of query\",\n                          \"examples\": [\n                            \"2025-10-02\"\n                          ]\n                        },\n                        \"totalTransactions\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Total number of transactions\",\n                          \"examples\": [\n                            31\n                          ]\n                        },\n                        \"transactions\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"transactionId\",\n                              \"transactionKind\",\n                              \"transactionLabel\",\n                              \"transactionType\",\n                              \"transactionStatus\",\n                              \"amount\",\n                              \"currency\",\n                              \"date\",\n                              \"timestamp\",\n                              \"terminalOwnerTitle\",\n                              \"terminalType\"\n                            ],\n                            \"properties\": {\n                              \"transactionId\": {\n                                \"type\": \"string\",\n                                \"description\": \"Unique transaction identifier\",\n                                \"examples\": [\n                                  \"251002511421445346\"\n                                ]\n                              },\n                              \"transactionKind\": {\n                                \"type\": \"string\",\n                                \"description\": \"Kind of transaction\",\n                                \"examples\": [\n                                  \"Goods\"\n                                ]\n                              },\n                              \"transactionLabel\": {\n                                \"type\": \"string\",\n                                \"description\": \"Transaction label\",\n                                \"examples\": [\n                                  \"Purchase\"\n                                ]\n                              },\n                              \"transactionType\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"Debit\",\n                                  \"Credit\",\n                                  \"Neutral\",\n                                  \"Unknown\"\n                                ],\n                                \"description\": \"Transaction type based on TranSignum: -1 = Debit, 1 = Credit, 0 = Neutral\",\n                                \"examples\": [\n                                  \"Debit\"\n                                ]\n                              },\n                              \"transactionStatus\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"Hold\",\n                                  \"Presentment\"\n                                ],\n                                \"description\": \"Settlement status: Hold (TranPostings empty) or Presentment (TranPostings has data)\",\n                                \"examples\": [\n                                  \"Presentment\"\n                                ]\n                              },\n                              \"amount\": {\n                                \"type\": \"number\",\n                                \"description\": \"Transaction amount\",\n                                \"examples\": [\n                                  45\n                                ]\n                              },\n                              \"currency\": {\n                                \"type\": \"string\",\n                                \"description\": \"Currency code\",\n                                \"examples\": [\n                                  \"USD\"\n                                ]\n                              },\n                              \"date\": {\n                                \"type\": \"string\",\n                                \"format\": \"date\",\n                                \"description\": \"Transaction date\",\n                                \"examples\": [\n                                  \"2025-10-02\"\n                                ]\n                              },\n                              \"timestamp\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\",\n                                \"description\": \"Transaction timestamp\",\n                                \"examples\": [\n                                  \"2025-10-02T14:12:22.000\"\n                                ]\n                              },\n                              \"terminalOwnerTitle\": {\n                                \"type\": \"string\",\n                                \"description\": \"Terminal owner/acquirer name\",\n                                \"examples\": [\n                                  \"ACQUIRER NAME\"\n                                ]\n                              },\n                              \"terminalType\": {\n                                \"type\": \"string\",\n                                \"description\": \"Type of terminal\",\n                                \"examples\": [\n                                  \"Pos\"\n                                ]\n                              },\n                              \"posting\": {\n                                \"type\": \"object\",\n                                \"description\": \"Posting details with RegRole='Current' (only present when transactionStatus is Presentment)\",\n                                \"properties\": {\n                                  \"sign\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"Debit\",\n                                      \"Credit\",\n                                      \"Unknown\"\n                                    ],\n                                    \"description\": \"Posting type: Debit (money out) or Credit (money in)\",\n                                    \"examples\": [\n                                      \"Debit\"\n                                    ]\n                                  },\n                                  \"amount\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Posting amount\",\n                                    \"examples\": [\n                                      409.2\n                                    ]\n                                  },\n                                  \"currency\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Currency title (e.g., Egyptian Pound, US Dollar) retrieved from account contract\",\n                                    \"examples\": [\n                                      \"Egyptian Pound\"\n                                    ]\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful transactions retrieval\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_TRANSACTIONS_RETRIEVED\",\n                      \"params\": {\n                        \"cardId\": \"3280\",\n                        \"startDate\": \"2025-07-01\",\n                        \"endDate\": \"2025-10-02\",\n                        \"totalTransactions\": 2,\n                        \"transactions\": [\n                          {\n                            \"transactionId\": \"251002511421445346\",\n                            \"transactionKind\": \"Goods\",\n                            \"transactionLabel\": \"Purchase\",\n                            \"transactionType\": \"Debit\",\n                            \"transactionStatus\": \"Presentment\",\n                            \"amount\": 45,\n                            \"currency\": \"USD\",\n                            \"date\": \"2025-10-02\",\n                            \"timestamp\": \"2025-10-02T14:12:22.000\",\n                            \"terminalOwnerTitle\": \"ACQUIRER NAME\",\n                            \"terminalType\": \"Pos\",\n                            \"posting\": {\n                              \"sign\": \"Debit\",\n                              \"amount\": 409.2,\n                              \"currency\": \"Egyptian Pound\"\n                            }\n                          },\n                          {\n                            \"transactionId\": \"250925476227641819\",\n                            \"transactionKind\": \"Goods\",\n                            \"transactionLabel\": \"Purchase\",\n                            \"transactionType\": \"Debit\",\n                            \"transactionStatus\": \"Hold\",\n                            \"amount\": 21,\n                            \"currency\": \"USD\",\n                            \"date\": \"2025-09-25\",\n                            \"timestamp\": \"2025-09-25T13:13:42.000\",\n                            \"terminalOwnerTitle\": \"ACQUIRER NAME\",\n                            \"terminalType\": \"Pos\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Invalid date format\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Invalid startDate format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ card not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_READTOKEN_DECLINED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Card not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_READTOKEN_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/get-pan\": {\n      \"post\": {\n        \"operationId\": \"getCardPan\",\n        \"summary\": \"Get PAN for Card\",\n        \"description\": \"Retrieve the unmasked PAN (Primary Account Number) for a card using its card ID.\\n\\n**Note:** This operation returns the full, unmasked PAN. Handle with appropriate security measures.\\n\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"cardId\"\n                ],\n                \"properties\": {\n                  \"cardId\": {\n                    \"type\": \"string\",\n                    \"description\": \"**Required.** Card ID\",\n                    \"examples\": [\n                      \"12345\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"cardId\": \"12345\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"PAN successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_PAN_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"pan\"\n                      ],\n                      \"properties\": {\n                        \"pan\": {\n                          \"type\": \"string\",\n                          \"description\": \"Primary Account Number (unmasked)\",\n                          \"examples\": [\n                            \"4373580001009606\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"PAN retrieved successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_PAN_RETRIEVED\",\n                      \"params\": {\n                        \"pan\": \"4373580001009606\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Missing required field: cardId\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ request declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_CARD_NOT_FOUND\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"exists\",\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"exists\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Whether the card exists in the system\",\n                          \"examples\": [\n                            false\n                          ]\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Card not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"cardNotFound\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_NOT_FOUND\",\n                      \"params\": {\n                        \"exists\": false,\n                        \"message\": \"Card\"\n                      }\n                    }\n                  },\n                  \"panNotAvailable\": {\n                    \"summary\": \"PAN not available\",\n                    \"value\": {\n                      \"code\": \"ERR_PAN_NOT_AVAILABLE\",\n                      \"params\": {\n                        \"message\": \"PAN is not available for this card\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/get-cvv2\": {\n      \"post\": {\n        \"operationId\": \"getCardCvv2\",\n        \"summary\": \"Get CVV2 for Card\",\n        \"description\": \"Retrieve the CVV2 (Card Verification Value) for a card using its PAN (Primary Account Number).\\n\\n**Note:** This operation calculates and returns the CVV2 value for the specified card.\\n\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"pan\"\n                ],\n                \"properties\": {\n                  \"pan\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^[0-9]{13,19}$\",\n                    \"description\": \"**Required.** Primary Account Number (13-19 digits)\",\n                    \"examples\": [\n                      \"4373580001009606\"\n                    ]\n                  }\n                }\n              },\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"pan\": \"4373580001009606\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"CVV2 successfully retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CVV2_RETRIEVED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"cvv2\"\n                      ],\n                      \"properties\": {\n                        \"cvv2\": {\n                          \"type\": \"string\",\n                          \"description\": \"Card Verification Value 2\",\n                          \"examples\": [\n                            \"123\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"CVV2 retrieved successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CVV2_RETRIEVED\",\n                      \"params\": {\n                        \"cvv2\": \"123\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Invalid PAN format\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Invalid pan format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ request declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_CARD_NOT_FOUND\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Card not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"cardNotFound\": {\n                    \"summary\": \"Card not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_NOT_FOUND\",\n                      \"params\": {\n                        \"message\": \"Card with PAN ending 9606 not found\"\n                      }\n                    }\n                  },\n                  \"cvv2NotAvailable\": {\n                    \"summary\": \"CVV2 not available\",\n                    \"value\": {\n                      \"code\": \"ERR_CVV2_NOT_AVAILABLE\",\n                      \"params\": {\n                        \"message\": \"CVV2 is not available for this card\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": __refMap[\"#/components/responses/InternalServerError\"],\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/create-card\": {\n      \"post\": {\n        \"operationId\": \"createCardWithOnboarding\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"summary\": \"Create Card\",\n        \"description\": \"Complete end-to-end card issuance with customer onboarding (card remains inactive).\\n\\n**Supports both New and Existing Customers:**\\n- **New Customer**: Creates customer profile and issues card\\n- **Existing Customer**: Creates card for existing customer profile\\n\\n**Process Flow:**\\n1. **Customer Verification**: Check if customer exists using document ID (NationalId or Passport)\\n2. **Customer Creation**: Create new customer profile (if new) OR create card for existing customer\\n3. **Card Issuance**: Issue the card (status remains inactive)\\n4. **Notifications**: Set up SMS/Email notifications (if enabled)\\n\\n**Note:** Card is NOT automatically activated. Use separate activation endpoint if needed.\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/CreateCardStandard\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"requestType\": \"NewAccountNewCustomer\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Doe\",\n                    \"middleName\": \"William\",\n                    \"birthDate\": \"1990-01-15\",\n                    \"nationalId\": \"1234567890\",\n                    \"email\": \"john.doe@example.com\",\n                    \"mobilePhone\": \"1234567890\",\n                    \"streetTitle\": \"123 Main Street\",\n                    \"zip\": \"12345\",\n                    \"notificationStatus\": \"enabled\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card successfully created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_REQUEST_PROCESSED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"customerType\",\n                        \"personId\",\n                        \"cardId\",\n                        \"cardDetails\",\n                        \"notificationEnabled\"\n                      ],\n                      \"properties\": {\n                        \"customerType\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"New\",\n                            \"Existing\"\n                          ],\n                          \"description\": \"Whether customer is new or existing\",\n                          \"examples\": [\n                            \"New\"\n                          ]\n                        },\n                        \"personId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer person ID\",\n                          \"examples\": [\n                            \"PERS12345\"\n                          ]\n                        },\n                        \"cardId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Card ID\",\n                          \"examples\": [\n                            \"12345\"\n                          ]\n                        },\n                        \"cardDetails\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"pan\",\n                            \"expirationDate\",\n                            \"cvv2\"\n                          ],\n                          \"properties\": {\n                            \"pan\": {\n                              \"type\": \"string\",\n                              \"description\": \"Primary Account Number\",\n                              \"examples\": [\n                                \"1234567890123456\"\n                              ]\n                            },\n                            \"expirationDate\": {\n                              \"type\": \"string\",\n                              \"format\": \"date\",\n                              \"description\": \"Card expiration date in YYYY-MM-DD format\",\n                              \"examples\": [\n                                \"2027-12-31\"\n                              ]\n                            },\n                            \"cvv2\": {\n                              \"type\": \"string\",\n                              \"description\": \"Card verification value\",\n                              \"examples\": [\n                                \"123\"\n                              ]\n                            }\n                          }\n                        },\n                        \"notificationEnabled\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Whether notifications are enabled\",\n                          \"examples\": [\n                            true\n                          ]\n                        },\n                        \"notificationStatus\": {\n                          \"type\": \"string\",\n                          \"description\": \"Notification status message (only if already existed)\",\n                          \"examples\": [\n                            \"Already Enabled\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Card created successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_REQUEST_PROCESSED\",\n                      \"params\": {\n                        \"customerType\": \"New\",\n                        \"personId\": \"PERS12345\",\n                        \"cardId\": \"12345\",\n                        \"cardDetails\": {\n                          \"pan\": \"1234567890123456\",\n                          \"expirationDate\": \"2027-12-31\",\n                          \"cvv2\": \"123\"\n                        },\n                        \"notificationEnabled\": true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Validation failed\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Invalid Email format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ operation declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"requestDeclined\": {\n                    \"summary\": \"New customer request declined\",\n                    \"value\": {\n                      \"code\": \"ERR_REQUEST_DECLINED\",\n                      \"params\": {\n                        \"message\": \"New customer request declined\"\n                      }\n                    }\n                  },\n                  \"existingGroupDeclined\": {\n                    \"summary\": \"Existing customer group declined\",\n                    \"value\": {\n                      \"code\": \"ERR_EXISTING_GROUP_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Existing customer group declined\"\n                      }\n                    }\n                  },\n                  \"activateCardDeclined\": {\n                    \"summary\": \"Card activation declined\",\n                    \"value\": {\n                      \"code\": \"ERR_ACTIVATE_CARD_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card activation declined\"\n                      }\n                    }\n                  },\n                  \"notificationDeclined\": {\n                    \"summary\": \"Notification contract declined\",\n                    \"value\": {\n                      \"code\": \"ERR_NOTIFICATION_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Notification contract declined\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_INTERNAL_SERVER_ERROR\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"An unexpected error occurred. Please try again later.\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerError\": {\n                    \"summary\": \"Internal server error\",\n                    \"value\": {\n                      \"code\": \"ERR_INTERNAL_SERVER_ERROR\",\n                      \"params\": {\n                        \"message\": \"An unexpected error occurred. Please try again later.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/create-card-with-activation\": {\n      \"post\": {\n        \"operationId\": \"createCardWithActivation\",\n        \"tags\": [\n          \"Card Management\"\n        ],\n        \"summary\": \"Create Card with Activation\",\n        \"description\": \"Complete end-to-end card issuance with customer onboarding and automatic activation.\\n\\n**Supports both New and Existing Customers:**\\n- **New Customer**: Creates customer profile and issues card\\n- **Existing Customer**: Links card to existing customer profile\\n\\n**Process Flow:**\\n1. **Customer Verification**: Check if customer exists using document ID (NationalId or Passport)\\n2. **Customer Creation**: Create new customer profile (if new) OR link to existing customer\\n3. **Card Activation**: Automatically activate the card (status = Active)\\n4. **Notifications**: Set up SMS/Email notifications (if enabled)\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/CreateCardStandard\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"requestType\": \"NewAccountNewCustomer\",\n                    \"firstName\": \"John\",\n                    \"lastName\": \"Doe\",\n                    \"middleName\": \"William\",\n                    \"birthDate\": \"1990-01-15\",\n                    \"nationalId\": \"1234567890\",\n                    \"email\": \"john.doe@example.com\",\n                    \"mobilePhone\": \"1234567890\",\n                    \"streetTitle\": \"123 Main Street\",\n                    \"zip\": \"12345\",\n                    \"notificationStatus\": \"enabled\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card successfully created and activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_REQUEST_PROCESSED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"customerType\",\n                        \"personId\",\n                        \"cardId\",\n                        \"cardDetails\",\n                        \"notificationEnabled\"\n                      ],\n                      \"properties\": {\n                        \"customerType\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"New\",\n                            \"Existing\"\n                          ],\n                          \"description\": \"Whether customer is new or existing\",\n                          \"examples\": [\n                            \"New\"\n                          ]\n                        },\n                        \"personId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Customer person ID\",\n                          \"examples\": [\n                            \"PERS12345\"\n                          ]\n                        },\n                        \"cardId\": {\n                          \"type\": \"string\",\n                          \"description\": \"Card ID\",\n                          \"examples\": [\n                            \"12345\"\n                          ]\n                        },\n                        \"cardDetails\": {\n                          \"type\": \"object\",\n                          \"required\": [\n                            \"pan\",\n                            \"expirationDate\",\n                            \"cvv2\"\n                          ],\n                          \"properties\": {\n                            \"pan\": {\n                              \"type\": \"string\",\n                              \"description\": \"Primary Account Number\",\n                              \"examples\": [\n                                \"1234567890123456\"\n                              ]\n                            },\n                            \"expirationDate\": {\n                              \"type\": \"string\",\n                              \"format\": \"date\",\n                              \"description\": \"Card expiration date in YYYY-MM-DD format\",\n                              \"examples\": [\n                                \"2027-12-31\"\n                              ]\n                            },\n                            \"cvv2\": {\n                              \"type\": \"string\",\n                              \"description\": \"Card verification value\",\n                              \"examples\": [\n                                \"123\"\n                              ]\n                            }\n                          }\n                        },\n                        \"notificationEnabled\": {\n                          \"type\": \"boolean\",\n                          \"description\": \"Whether notifications are enabled\",\n                          \"examples\": [\n                            true\n                          ]\n                        },\n                        \"notificationStatus\": {\n                          \"type\": \"string\",\n                          \"description\": \"Notification status message (only if already existed)\",\n                          \"examples\": [\n                            \"Already Enabled\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Card created and activated successfully\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_REQUEST_PROCESSED\",\n                      \"params\": {\n                        \"customerType\": \"New\",\n                        \"personId\": \"PERS12345\",\n                        \"cardId\": \"12345\",\n                        \"cardDetails\": {\n                          \"pan\": \"1234567890123456\",\n                          \"expirationDate\": \"2027-12-31\",\n                          \"cvv2\": \"123\"\n                        },\n                        \"notificationEnabled\": true\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request â€“ validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ValidationError\"],\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Validation failed\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"message\": \"Invalid Email format\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": __refMap[\"#/components/responses/AuthenticationError\"],\n          \"409\": {\n            \"description\": \"Conflict â€“ operation declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n                \"examples\": {\n                  \"requestDeclined\": {\n                    \"summary\": \"New customer request declined\",\n                    \"value\": {\n                      \"code\": \"ERR_REQUEST_DECLINED\",\n                      \"params\": {\n                        \"message\": \"New customer request declined\"\n                      }\n                    }\n                  },\n                  \"existingGroupDeclined\": {\n                    \"summary\": \"Existing customer group declined\",\n                    \"value\": {\n                      \"code\": \"ERR_EXISTING_GROUP_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Existing customer group declined\"\n                      }\n                    }\n                  },\n                  \"activateCardDeclined\": {\n                    \"summary\": \"Card activation declined\",\n                    \"value\": {\n                      \"code\": \"ERR_ACTIVATE_CARD_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Card activation declined\"\n                      }\n                    }\n                  },\n                  \"notificationDeclined\": {\n                    \"summary\": \"Notification contract declined\",\n                    \"value\": {\n                      \"code\": \"ERR_NOTIFICATION_DECLINED\",\n                      \"params\": {\n                        \"message\": \"Notification contract declined\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_INTERNAL_SERVER_ERROR\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"message\"\n                      ],\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"An unexpected error occurred. Please try again later.\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerError\": {\n                    \"summary\": \"Internal server error\",\n                    \"value\": {\n                      \"code\": \"ERR_INTERNAL_SERVER_ERROR\",\n                      \"params\": {\n                        \"message\": \"An unexpected error occurred. Please try again later.\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"responses\": {\n      \"LambdaTimeout\": {\n        \"description\": \"Gateway Timeout â€“ task took too long\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"errorMessage\"\n              ],\n              \"properties\": {\n                \"errorMessage\": {\n                  \"type\": \"string\",\n                  \"examples\": [\n                    \"Task timed out after 1.10 seconds\"\n                  ]\n                }\n              }\n            },\n            \"examples\": {\n              \"lambdaTimeout\": {\n                \"summary\": \"Lambda execution timed out\",\n                \"value\": {\n                  \"errorMessage\": \"Task timed out after 1.10 seconds\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"AuthenticationError\": {\n        \"description\": \"Authentication context is missing or invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"code\",\n                \"params\"\n              ],\n              \"properties\": {\n                \"code\": {\n                  \"type\": \"string\",\n                  \"examples\": [\n                    \"ERR_AUTH_CONTEXT\"\n                  ]\n                },\n                \"params\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Authentication context is missing\"\n                      ]\n                    }\n                  }\n                }\n              }\n            },\n            \"examples\": {\n              \"authError\": {\n                \"summary\": \"Authentication error\",\n                \"value\": {\n                  \"code\": \"ERR_AUTH_CONTEXT\",\n                  \"params\": {\n                    \"message\": \"Authentication context is missing\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"ConflictError\": {\n        \"description\": \"Conflict â€“ operation declined\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": __refMap[\"#/components/schemas/ConflictError\"],\n            \"examples\": {\n              \"requestDeclined\": {\n                \"summary\": \"Operation declined\",\n                \"value\": {\n                  \"code\": \"ERR_REQUEST_DECLINED\",\n                  \"params\": {\n                    \"message\": \"Operation was declined\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"InternalServerError\": {\n        \"description\": \"An unexpected error occurred\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"code\",\n                \"params\"\n              ],\n              \"properties\": {\n                \"code\": {\n                  \"type\": \"string\",\n                  \"examples\": [\n                    \"ERR_INTERNAL_SERVER_ERROR\"\n                  ]\n                },\n                \"params\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"An unexpected error occurred. Please try again later.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            },\n            \"examples\": {\n              \"internalError\": {\n                \"summary\": \"Internal server error\",\n                \"value\": {\n                  \"code\": \"ERR_INTERNAL_SERVER_ERROR\",\n                  \"params\": {\n                    \"message\": \"An unexpected error occurred. Please try again later.\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"SuccessEnvelope\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"SUCCESS_REQUEST_PROCESSED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"requestType\"\n            ],\n            \"properties\": {\n              \"requestType\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"NewAccountNewCustomer\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"BadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_VALIDATION_FAILED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"missingProperty\"\n            ],\n            \"properties\": {\n              \"missingProperty\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"requestType\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"CardAlreadyAssigned\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_CARD_ALREADY_ASSIGNED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"This Card Is Already Assigned To A Customer!\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"requestType\",\n          \"accountNum\",\n          \"cardRefNum\",\n          \"embossedName\",\n          \"nationalId\",\n          \"passport\",\n          \"firstName\",\n          \"lastName\"\n        ],\n        \"properties\": {\n          \"requestType\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** Request type:\\n- `NewAccountNewCustomer`: New customer  \\n- `NewAccountExistingCustomer`: Existing customer\\n\"\n          },\n          \"cardRefNum\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** Card reference number\"\n          },\n          \"embossedName\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** Name to be embossed on the card\"\n          },\n          \"accountNum\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** Account number to link to the card\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"**Required for new customers.** Customer's first name\"\n          },\n          \"middleName\": {\n            \"type\": \"string\",\n            \"description\": \"Optional. Customer's middle name\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"**Required for new customers.** Customer's last name\"\n          },\n          \"nationalId\": {\n            \"type\": \"string\",\n            \"description\": \"Either nationalId or passport is required. Customer's national ID\"\n          },\n          \"passport\": {\n            \"type\": \"string\",\n            \"description\": \"Either nationalId or passport is required. Customer's passport number\"\n          },\n          \"birthDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n            \"description\": \"Date of birth in YYYY-MM-DD format\",\n            \"examples\": [\n              \"1990-01-01\"\n            ]\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"Customer's email address\"\n          },\n          \"mobilePhone\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's mobile phone number\"\n          },\n          \"streetTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's street address\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's postal code\"\n          }\n        }\n      },\n      \"PinSetting\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"pan\",\n          \"pinBlock\"\n        ],\n        \"properties\": {\n          \"pan\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** The Primary Account Number (PAN) of the card\",\n            \"examples\": [\n              \"1234567890123456\"\n            ]\n          },\n          \"pinBlock\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** The encrypted PIN block containing the new PIN\",\n            \"examples\": [\n              \"ABC123DEF456\"\n            ]\n          }\n        }\n      },\n      \"PinChanging\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"pan\",\n          \"oldPinBlock\",\n          \"newPinBlock\"\n        ],\n        \"properties\": {\n          \"pan\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** The Primary Account Number (PAN) of the card\",\n            \"examples\": [\n              \"1234567890123456\"\n            ]\n          },\n          \"oldPinBlock\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** The encrypted PIN block containing the current PIN for verification\",\n            \"examples\": [\n              \"OLD123PIN456\"\n            ]\n          },\n          \"newPinBlock\": {\n            \"type\": \"string\",\n            \"description\": \"**Required.** The encrypted PIN block containing the new PIN to be set\",\n            \"examples\": [\n              \"NEW789PIN012\"\n            ]\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_VALIDATION_FAILED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"Missing required field or invalid field format\"\n                ]\n              },\n              \"missingProperty\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the missing or invalid property\",\n                \"examples\": [\n                  \"cardRefNum\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"ConflictError\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_CARD_DECLINED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"Operation was declined\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"ServerError\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ERR_SUBJECT_ID_NOT_FOUND\",\n              \"ERR_CLIENTID_NOT_FOUND\",\n              \"ERR_INTERNAL_SERVER_ERROR\"\n            ],\n            \"examples\": [\n              \"ERR_INTERNAL_SERVER_ERROR\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"examples\": [\n                  \"An unexpected error occurred\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"CreateCardStandard\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"requestType\"\n        ],\n        \"properties\": {\n          \"requestType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"NewAccountNewCustomer\",\n              \"NewAccountExistingCustomer\"\n            ],\n            \"description\": \"**Required.** Type of request - NewAccountNewCustomer or NewAccountExistingCustomer\",\n            \"examples\": [\n              \"NewAccountNewCustomer\"\n            ]\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"**Required for NewAccountNewCustomer.** Customer's first name\",\n            \"examples\": [\n              \"John\"\n            ]\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"**Required for NewAccountNewCustomer.** Customer's last name\",\n            \"examples\": [\n              \"Doe\"\n            ]\n          },\n          \"middleName\": {\n            \"type\": \"string\",\n            \"description\": \"Optional. Customer's middle name\",\n            \"examples\": [\n              \"William\"\n            ]\n          },\n          \"birthDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"pattern\": \"^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$\",\n            \"description\": \"Birth date in YYYY-MM-DD format\",\n            \"examples\": [\n              \"1990-01-15\"\n            ]\n          },\n          \"nationalId\": {\n            \"type\": \"string\",\n            \"description\": \"Either nationalId or passport or id is required. Customer's national ID\",\n            \"examples\": [\n              \"1234567890\"\n            ]\n          },\n          \"passport\": {\n            \"type\": \"string\",\n            \"description\": \"Either nationalId or passport or id is required. Customer's passport number\",\n            \"examples\": [\n              \"AB1234567\"\n            ]\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Either nationalId or passport or id is required. Customer's ID\",\n            \"examples\": [\n              \"ID123456\"\n            ]\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"pattern\": \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$\",\n            \"description\": \"Customer's email address\",\n            \"examples\": [\n              \"john.doe@example.com\"\n            ]\n          },\n          \"mobilePhone\": {\n            \"type\": \"string\",\n            \"description\": \"**Required for NewAccountNewCustomer.** Customer's mobile phone number\",\n            \"examples\": [\n              \"1234567890\"\n            ]\n          },\n          \"streetTitle\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's street address\",\n            \"examples\": [\n              \"123 Main Street\"\n            ]\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's postal code\",\n            \"examples\": [\n              \"12345\"\n            ]\n          },\n          \"notificationStatus\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"enabled\",\n              \"disabled\"\n            ],\n            \"description\": \"Notification preference - enabled or disabled\",\n            \"examples\": [\n              \"enabled\"\n            ]\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"apiKey\": {\n        \"name\": \"x-api-key\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"API key for authentication\"\n      },\n      \"contentType\": {\n        \"name\": \"Content-Type\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"default\": \"application/json\"\n        },\n        \"description\": \"Content type of the request body\"\n      }\n    }\n  }\n};"],"names":["__refs","__refMap","schema"],"mappings":"AAAA,MAAMA,EAAS,MAAM,KAAK,CAAE,OAAQ,EAAI,EAAE,KAAO,CAAA,EAAG,EAC9CC,EAAW,CACf,iCAAkCD,EAAO,CAAC,EAC1C,sCAAuCA,EAAO,CAAC,EAC/C,uCAAwCA,EAAO,CAAC,EAChD,6CAA8CA,EAAO,CAAC,EACtD,6CAA8CA,EAAO,CAAC,EACtD,qCAAsCA,EAAO,CAAC,EAC9C,uCAAwCA,EAAO,CAAC,EAChD,gCAAiCA,EAAO,CAAC,EACzC,uCAAwCA,EAAO,CAAC,EAChD,kCAAmCA,EAAO,CAAC,EAC3C,2CAA4CA,EAAO,EAAE,EACrD,kCAAmCA,EAAO,EAAE,EAC5C,mCAAoCA,EAAO,EAAE,EAC7C,0CAA2CA,EAAO,EAAE,CACtD,EACA,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,YACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,QACT,EACD,YAAe,4BACjB,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,eACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,SACR,QAAW,kBACZ,EACD,YAAe,kCACjB,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACR,CACK,EACD,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gDACZ,CACS,EACD,gBAAmB,CACjB,KAAQ,SACR,YAAe,8CACf,SAAY,CACV,YACZ,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,YAAe,+CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,kBACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,mCAClB,CACA,CACA,CACA,CACA,CACO,EACD,SAAY,CACV,UAAa,CACX,QAAW,uBACX,MAAS,CACP,KAAQ,mBACR,OAAU,CACR,QAAW,mCACzB,CACA,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,YAAe,+BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,uDAClB,CACA,CACA,CACA,CACA,CACO,EACD,SAAY,CACV,cAAiB,CACf,QAAW,wBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,uDACzB,CACA,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,mBACR,CACK,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,wBACZ,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,YAAe,uCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,mCACd,CACA,CACA,CACO,EACD,SAAY,CACV,cAAiB,CACf,QAAW,6BACX,MAAS,CACP,aAAgB,mCAC5B,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,SACR,SAAY,CACV,cACA,aACA,aACA,eACA,aACA,WACA,YACA,UACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,YAAe,6HAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,qCAChB,EACD,aAAgB,CACd,KAAQ,SACR,YAAe,+CAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,kDAChB,EACD,UAAa,CACX,KAAQ,SACR,YAAe,uDAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,kCAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,sDAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,mEAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,uEAChB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,yBACX,YAAe,qCACf,SAAY,CACV,YACR,CACK,EACD,MAAS,CACP,KAAQ,SACR,OAAU,QACV,YAAe,0BAChB,EACD,YAAe,CACb,KAAQ,SACR,YAAe,gCAChB,EACD,YAAe,CACb,KAAQ,SACR,YAAe,2BAChB,EACD,IAAO,CACL,KAAQ,SACR,YAAe,wBACrB,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACR,CACK,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,SAAY,CACV,uBACZ,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,CAAC,EAAG,CACvB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACR,CACK,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,aACZ,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,EAAE,EAAG,CACxB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACR,CACK,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,8CACZ,CACA,CACA,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,EAAE,EAAG,CACxB,KAAQ,SACR,SAAY,CACV,MACA,UACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,6DACf,SAAY,CACV,kBACR,CACK,EACD,SAAY,CACV,KAAQ,SACR,YAAe,+DACf,SAAY,CACV,cACR,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,EAAE,EAAG,CACxB,KAAQ,SACR,SAAY,CACV,MACA,cACA,aACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,6DACf,SAAY,CACV,kBACR,CACK,EACD,YAAe,CACb,KAAQ,SACR,YAAe,oFACf,SAAY,CACV,cACR,CACK,EACD,YAAe,CACb,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,cACR,CACA,CACA,CACA,CAAC,EACD,OAAO,OAAOA,EAAO,EAAE,EAAG,CACxB,KAAQ,SACR,SAAY,CACV,aACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,KAAQ,CACN,wBACA,4BACD,EACD,YAAe,sFACf,SAAY,CACV,uBACR,CACK,EACD,UAAa,CACX,KAAQ,SACR,YAAe,gEACf,SAAY,CACV,MACR,CACK,EACD,SAAY,CACV,KAAQ,SACR,YAAe,+DACf,SAAY,CACV,KACR,CACK,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,mCACf,SAAY,CACV,SACR,CACK,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,sDACX,YAAe,kCACf,SAAY,CACV,YACR,CACK,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,0EACf,SAAY,CACV,YACR,CACK,EACD,SAAY,CACV,KAAQ,SACR,YAAe,8EACf,SAAY,CACV,WACR,CACK,EACD,GAAM,CACJ,KAAQ,SACR,YAAe,iEACf,SAAY,CACV,UACR,CACK,EACD,MAAS,CACP,KAAQ,SACR,OAAU,QACV,QAAW,oDACX,YAAe,2BACf,SAAY,CACV,sBACR,CACK,EACD,YAAe,CACb,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,YACR,CACK,EACD,YAAe,CACb,KAAQ,SACR,YAAe,4BACf,SAAY,CACV,iBACR,CACK,EACD,IAAO,CACL,KAAQ,SACR,YAAe,yBACf,SAAY,CACV,OACR,CACK,EACD,mBAAsB,CACpB,KAAQ,SACR,KAAQ,CACN,UACA,UACD,EACD,YAAe,gDACf,SAAY,CACV,SACR,CACA,CACA,CACA,CAAC,EACW,MAACE,EAAS,CACpB,QAAW,QACX,KAAQ,CACN,MAAS,8BACT,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,QAAW,sBACZ,EACD,QAAW,CACT,CACE,IAAO,kCACb,CACG,EACD,KAAQ,CACN,CACE,KAAQ,kBACR,YAAe,+DAChB,EACD,CACE,KAAQ,mBACR,YAAe,qDAChB,EACD,CACE,KAAQ,sBACR,YAAe,0CAChB,EACD,CACE,KAAQ,eACR,YAAe,0CAChB,EACD,CACE,KAAQ,aACR,YAAe,mDAChB,EACD,CACE,KAAQ,iBACR,YAAe,mCAChB,EACD,CACE,KAAQ,kBACR,YAAe,sDACrB,CACG,EACD,MAAS,CACP,mBAAoB,CAClB,KAAQ,CACN,YAAe,yBACf,QAAW,2BACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,qBACD,EACD,WAAc,CACZD,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,YACtB,CACmB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,6EACf,SAAY,CACV,WACtB,CACmB,EACD,GAAM,CACJ,KAAQ,SACR,YAAe,gEACf,SAAY,CACV,UACtB,CACA,CACA,CACe,EACD,SAAY,CACV,eAAkB,CAChB,QAAW,uBACX,MAAS,CACP,WAAc,YAClC,CACiB,EACD,aAAgB,CACd,QAAW,oBACX,MAAS,CACP,SAAY,WAChC,CACiB,EACD,OAAU,CACR,QAAW,cACX,MAAS,CACP,GAAM,UAC1B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,gCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,SACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,UACR,YAAe,4CACf,SAAY,CACV,EAC5B,CACyB,EACD,QAAW,CACT,KAAQ,SACR,YAAe,kBACf,SAAY,CACV,iBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,eAAkB,CAChB,QAAW,4BACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,OAAU,GACV,QAAW,iBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,sBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,mEACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,qBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,SACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,UACR,YAAe,4CACf,SAAY,CACV,EAC5B,CACyB,EACD,QAAW,CACT,KAAQ,SACR,SAAY,CACV,oBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,iBAAoB,CAClB,QAAW,0BACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,OAAU,GACV,QAAW,oBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,CACtE,CACA,CACK,EACD,qBAAsB,CACpB,KAAQ,CACN,YAAe,qBACf,QAAW,uBACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,qBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,WACtB,CACmB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,6EACf,SAAY,CACV,YACtB,CACmB,EACD,GAAM,CACJ,KAAQ,SACR,YAAe,gEACf,SAAY,CACV,UACtB,CACA,CACA,CACe,EACD,SAAY,CACV,aAAgB,CACd,QAAW,qBACX,MAAS,CACP,SAAY,YAChC,CACiB,EACD,eAAkB,CAChB,QAAW,wBACX,MAAS,CACP,WAAc,WAClC,CACiB,EACD,OAAU,CACR,QAAW,eACX,MAAS,CACP,GAAM,UAC1B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,0CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,oCACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,YACA,WACA,YACA,SACA,QACA,aACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,sBACf,SAAY,CACV,OAC5B,CACyB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,uBACf,SAAY,CACV,KAC5B,CACyB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,qBACf,SAAY,CACV,SAC5B,CACyB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,YACV,YAAe,gBACf,SAAY,CACV,yBAC5B,CACyB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,6BACf,SAAY,CACV,GAC5B,CACyB,EACD,MAAS,CACP,KAAQ,SACR,OAAU,QACV,YAAe,wBACf,SAAY,CACV,SAC5B,CACyB,EACD,YAAe,CACb,KAAQ,SACR,YAAe,uBACf,SAAY,CACV,aAC5B,CACyB,EACD,YAAe,CACb,KAAQ,SACR,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,YAAe,iBACf,SAAY,CACV,KAChC,CAC6B,EACD,IAAO,CACL,KAAQ,SACR,YAAe,cACf,SAAY,CACV,OAChC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,0CACX,MAAS,CACP,KAAQ,qCACR,OAAU,CACR,UAAa,QACb,WAAc,MACd,SAAY,UACZ,UAAa,0BACb,OAAU,IACV,MAAS,UACT,YAAe,cACf,YAAe,CACb,YAAe,MACf,IAAO,OACjC,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,0BACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,2CACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,qBACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,iBAAoB,CAClB,QAAW,qBACX,MAAS,CACP,KAAQ,uBACR,OAAU,CACR,QAAW,oBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,mBAAoB,CAClB,KAAQ,CACN,YAAe,mBACf,QAAW,qBACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,iBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,+BAA+B,EAClD,SAAY,CACV,QAAW,CACT,MAAS,CACP,YAAe,wBACf,SAAY,MACZ,UAAa,SACb,UAAa,aACb,SAAY,cACZ,MAAS,gBACT,YAAe,aACf,YAAe,cACf,IAAO,WACP,WAAc,eACd,WAAc,SACd,aAAgB,YACpC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,cAAiB,CACf,QAAW,yBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,YAAe,uBACvC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,iCAAiC,EACpD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,aAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,EAC7D,SAAY,CACV,cAAiB,CACf,QAAW,gCACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,8CACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,wBACf,SAAY,CACV,mCACxB,CACA,CACA,CACiB,EACD,SAAY,CACV,cAAiB,CACf,QAAW,6BACX,MAAS,CACP,aAAgB,mCACtC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,wBAAyB,CACvB,KAAQ,CACN,YAAe,wBACf,QAAW,4CACX,YAAe;AAAA,EACf,KAAQ,CACN,YACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,YAAe,2CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACA,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,qCAChB,EACD,eAAkB,CAChB,KAAQ,SACR,YAAe,iEACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,0BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,KAAQ,2BACR,OAAU,CACR,OAAU,SAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,YAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,YAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,iBACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,QAAW,gBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,8BAA+B,CAC7B,KAAQ,CACN,YAAe,2BACf,KAAQ,CACN,iBACD,EACD,QAAW,yCACX,YAAe;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACA,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,8DACf,KAAQ,CACN,SACA,aACD,EACD,SAAY,CACV,QACtB,CACmB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,4CACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,4BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,gCACX,MAAS,CACP,KAAQ,6BACR,OAAU,CACR,OAAU,QAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,oCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,gBAAmB,CACjB,QAAW,iCACX,MAAS,CACP,KAAQ,oBACR,OAAU,CACR,QAAW,gBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,WAAY,CACV,KAAQ,CACN,YAAe,aACf,QAAW,mBACX,YAAe;AAAA,EACf,KAAQ,CACN,gBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,iCAAiC,EACpD,SAAY,CACV,QAAW,CACT,MAAS,CACP,IAAO,mBACP,SAAY,cAChC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,uBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,iBACxB,CACqB,EACD,OAAU,CACR,KAAQ,QAC9B,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,uBACX,MAAS,CACP,KAAQ,kBACR,OAAU,CAAA,CAChC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,0BAC5B,CACyB,EACD,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,KAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,KAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,0BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,0BAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,uBACX,MAAS,CACP,KAAQ,2BACR,OAAU,CACR,QAAW,0BACnC,CACA,CACmB,EACD,gBAAmB,CACjB,QAAW,2BACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,0BACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,aACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,0CAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,eAAkB,CAChB,QAAW,kBACX,MAAS,CACP,KAAQ,cACR,OAAU,CACR,QAAW,0CACnC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,4BAA6B,CAC3B,KAAQ,CACN,YAAe,mBACf,QAAW,8BACX,YAAe;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,gBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,wBACf,SAAY,CACV,OACtB,CACA,CACA,CACe,EACD,SAAY,CACV,QAAW,CACT,MAAS,CACP,OAAU,OAC9B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,6BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,UACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,UACf,SAAY,CACV,OAC5B,CACyB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,sBACf,SAAY,CACV,cAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,mCACX,MAAS,CACP,KAAQ,8BACR,OAAU,CACR,OAAU,QACV,SAAY,cACpC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,8BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,6BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,4BAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,qBAAwB,CACtB,QAAW,0BACX,MAAS,CACP,KAAQ,8BACR,OAAU,CACR,QAAW,oGACnC,CACA,CACmB,EACD,iBAAoB,CAClB,QAAW,sBACX,MAAS,CACP,KAAQ,0BACR,OAAU,CACR,QAAW,mCACnC,CACA,CACmB,EACD,aAAgB,CACd,QAAW,iBACX,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,QAAW,MACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,cAAe,CACb,KAAQ,CACN,YAAe,gBACf,QAAW,sBACX,YAAe;AAAA,EACf,KAAQ,CACN,gBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,kCAAkC,EACrD,SAAY,CACV,QAAW,CACT,MAAS,CACP,IAAO,mBACP,YAAe,eACf,YAAe,cACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,qBACxB,CACqB,EACD,OAAU,CACR,KAAQ,QAC9B,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,2BACX,MAAS,CACP,KAAQ,qBAC9B,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,aAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,aAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACpB,CACiB,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,yBACtB,CACmB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,0BAC1B,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,sBACX,MAAS,CACP,KAAQ,0BACR,OAAU,CACR,QAAW,0BACnC,CACA,CACmB,EACD,gBAAmB,CACjB,QAAW,2BACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,0BACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,aACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,0CAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,eAAkB,CAChB,QAAW,kBACX,MAAS,CACP,KAAQ,cACR,OAAU,CACR,QAAW,0CACnC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,6BAA8B,CAC5B,KAAQ,CACN,YAAe,uBACf,KAAQ,CACN,iBACD,EACD,QAAW,gCACX,YAAe;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACA,QACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,4EACf,KAAQ,CACN,SACA,cACA,SACD,EACD,SAAY,CACV,QACtB,CACmB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,+BACf,SAAY,CACV,OACtB,CACmB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,oCACf,SAAY,CACV,kBACtB,CACA,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,4BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,gCACX,MAAS,CACP,KAAQ,6BACR,OAAU,CACR,OAAU,QAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,yCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,gBAAmB,CACjB,QAAW,gBACX,MAAS,CACP,KAAQ,oBACR,OAAU,CACR,QAAW,gBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,gCAAiC,CAC/B,IAAO,CACL,YAAe,iBACf,KAAQ,CACN,kBACD,EACD,QAAW,8BACX,YAAe;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,EAC9C,CACE,KAAQ,UACR,GAAM,OACN,SAAY,GACZ,YAAe,kCACf,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OAChB,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,gCACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,YACA,SACA,aACA,mBACA,UACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,gCACf,SAAY,CACV,kBAC5B,CACyB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,sBACf,SAAY,CACV,QAC5B,CACyB,EACD,WAAc,CACZ,KAAQ,SACR,OAAU,OACV,YAAe,mBACf,SAAY,CACV,YAC5B,CACyB,EACD,iBAAoB,CAClB,KAAQ,SACR,YAAe,gCACf,SAAY,CACV,SAC5B,CACyB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,0BACf,SAAY,CACV,KAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,oCACX,MAAS,CACP,KAAQ,iCACR,OAAU,CACR,UAAa,mBACb,OAAU,SACV,WAAc,aACd,iBAAoB,UACpB,SAAY,KACpC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,aAAgB,CACd,QAAW,iBACX,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,QAAW,gBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,2BAA4B,CAC1B,KAAQ,CACN,YAAe,oBACf,KAAQ,CACN,kBACD,EACD,QAAW,0BACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,SAAY,CACV,KAAQ,SACR,YAAe,6EACf,SAAY,CACV,aACtB,CACmB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,YACtB,CACmB,EACD,GAAM,CACJ,KAAQ,SACR,YAAe,gEACf,SAAY,CACV,UACtB,CACA,CACA,CACe,EACD,SAAY,CACV,aAAgB,CACd,QAAW,qBACX,MAAS,CACP,SAAY,aAChC,CACiB,EACD,eAAkB,CAChB,QAAW,wBACX,MAAS,CACP,WAAc,YAClC,CACiB,EACD,OAAU,CACR,QAAW,eACX,MAAS,CACP,GAAM,UAC1B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,+BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,yBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACA,OACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,UACR,YAAe,8BACf,SAAY,CACV,CAC5B,CACyB,EACD,MAAS,CACP,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,UACf,SAAY,CACV,OAClC,CAC+B,EACD,UAAa,CACX,KAAQ,SACR,YAAe,kBACf,SAAY,CACV,kBAClC,CAC+B,EACD,YAAe,CACb,KAAQ,SACR,YAAe,oBACf,SAAY,CACV,iBAClC,CAC+B,EACD,OAAU,CACR,KAAQ,SACR,YAAe,cACf,SAAY,CACV,QAClC,CAC+B,EACD,WAAc,CACZ,KAAQ,SACR,OAAU,OACV,YAAe,mBACf,SAAY,CACV,YAClC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,KAAQ,0BACR,OAAU,CACR,WAAc,EACd,MAAS,CACP,CACE,OAAU,QACV,UAAa,mBACb,YAAe,kBACf,OAAU,SACV,WAAc,YACf,EACD,CACE,OAAU,QACV,UAAa,mBACb,YAAe,mBACf,OAAU,cACV,WAAc,YAC1C,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,kCACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,2CACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,qBACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,iBAAoB,CAClB,QAAW,qBACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,QAAW,wBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,qBAAsB,CACpB,KAAQ,CACN,YAAe,aACf,QAAW,cACX,YAAe;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,iBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,yDACf,SAAY,CACV,MACtB,CACmB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,mEACf,SAAY,CACV,mBACtB,CACA,CACA,CACe,EACD,SAAY,CACV,eAAkB,CAChB,QAAW,oBACX,MAAS,CACP,OAAU,MAC9B,CACiB,EACD,eAAkB,CAChB,QAAW,yBACX,MAAS,CACP,OAAU,mBAC9B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,MACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,sBACxB,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,4BACX,MAAS,CACP,KAAQ,sBAC9B,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,yDACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,iDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,oBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,aAAgB,CACd,QAAW,iBACX,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,QAAW,MACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,8BAA+B,CAC7B,KAAQ,CACN,YAAe,wBACf,KAAQ,CACN,cACD,EACD,QAAW,0BACX,YAAe;AAAA;AAAA;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,YACA,SACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,wBACf,SAAY,CACV,OACtB,CACmB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,yBACX,YAAe,gDACf,SAAY,CACV,YACtB,CACmB,EACD,QAAW,CACT,KAAQ,SACR,OAAU,OACV,QAAW,yBACX,YAAe,8CACf,SAAY,CACV,YACtB,CACmB,EACD,iBAAoB,CAClB,KAAQ,UACR,QAAW,EACX,QAAW,IACX,YAAe,6DACf,SAAY,CACV,CACtB,CACA,CACA,CACe,EACD,SAAY,CACV,QAAW,CACT,MAAS,CACP,OAAU,QACV,UAAa,aACb,QAAW,aACX,iBAAoB,CACxC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,gCACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,YACA,UACA,oBACA,cACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,UACf,SAAY,CACV,MAC5B,CACyB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,YAAe,sBACf,SAAY,CACV,YAC5B,CACyB,EACD,QAAW,CACT,KAAQ,SACR,OAAU,OACV,YAAe,oBACf,SAAY,CACV,YAC5B,CACyB,EACD,kBAAqB,CACnB,KAAQ,UACR,YAAe,+BACf,SAAY,CACV,EAC5B,CACyB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,gBACA,kBACA,mBACA,kBACA,oBACA,SACA,WACA,OACA,YACA,qBACA,cACD,EACD,WAAc,CACZ,cAAiB,CACf,KAAQ,SACR,YAAe,gCACf,SAAY,CACV,oBAClC,CAC+B,EACD,gBAAmB,CACjB,KAAQ,SACR,YAAe,sBACf,SAAY,CACV,OAClC,CAC+B,EACD,iBAAoB,CAClB,KAAQ,SACR,YAAe,oBACf,SAAY,CACV,UAClC,CAC+B,EACD,gBAAmB,CACjB,KAAQ,SACR,KAAQ,CACN,QACA,SACA,UACA,SACD,EACD,YAAe,4EACf,SAAY,CACV,OAClC,CAC+B,EACD,kBAAqB,CACnB,KAAQ,SACR,KAAQ,CACN,OACA,aACD,EACD,YAAe,sFACf,SAAY,CACV,aAClC,CAC+B,EACD,OAAU,CACR,KAAQ,SACR,YAAe,qBACf,SAAY,CACV,EAClC,CAC+B,EACD,SAAY,CACV,KAAQ,SACR,YAAe,gBACf,SAAY,CACV,KAClC,CAC+B,EACD,KAAQ,CACN,KAAQ,SACR,OAAU,OACV,YAAe,mBACf,SAAY,CACV,YAClC,CAC+B,EACD,UAAa,CACX,KAAQ,SACR,OAAU,YACV,YAAe,wBACf,SAAY,CACV,yBAClC,CAC+B,EACD,mBAAsB,CACpB,KAAQ,SACR,YAAe,+BACf,SAAY,CACV,eAClC,CAC+B,EACD,aAAgB,CACd,KAAQ,SACR,YAAe,mBACf,SAAY,CACV,KAClC,CAC+B,EACD,QAAW,CACT,KAAQ,SACR,YAAe,8FACf,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,KAAQ,CACN,QACA,SACA,SACD,EACD,YAAe,uDACf,SAAY,CACV,OACtC,CACmC,EACD,OAAU,CACR,KAAQ,SACR,YAAe,iBACf,SAAY,CACV,KACtC,CACmC,EACD,SAAY,CACV,KAAQ,SACR,YAAe,mFACf,SAAY,CACV,gBACtC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,oCACX,MAAS,CACP,KAAQ,iCACR,OAAU,CACR,OAAU,OACV,UAAa,aACb,QAAW,aACX,kBAAqB,EACrB,aAAgB,CACd,CACE,cAAiB,qBACjB,gBAAmB,QACnB,iBAAoB,WACpB,gBAAmB,QACnB,kBAAqB,cACrB,OAAU,GACV,SAAY,MACZ,KAAQ,aACR,UAAa,0BACb,mBAAsB,gBACtB,aAAgB,MAChB,QAAW,CACT,KAAQ,QACR,OAAU,MACV,SAAY,gBAC1C,CAC2B,EACD,CACE,cAAiB,qBACjB,gBAAmB,QACnB,iBAAoB,WACpB,gBAAmB,QACnB,kBAAqB,OACrB,OAAU,GACV,SAAY,MACZ,KAAQ,aACR,UAAa,0BACb,mBAAsB,gBACtB,aAAgB,KAC5C,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,sBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,0BACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,iBACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,QAAW,gBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,iBAAkB,CAChB,KAAQ,CACN,YAAe,aACf,QAAW,mBACX,YAAe;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,iBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,YAAe,wBACf,SAAY,CACV,OACtB,CACA,CACA,CACe,EACD,SAAY,CACV,QAAW,CACT,MAAS,CACP,OAAU,OAC9B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,KACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,oCACf,SAAY,CACV,kBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,IAAO,kBAC/B,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,8BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,oBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACA,SACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,UACR,YAAe,wCACf,SAAY,CACV,EAC5B,CACyB,EACD,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,aAAgB,CACd,QAAW,iBACX,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,OAAU,GACV,QAAW,MACnC,CACA,CACmB,EACD,gBAAmB,CACjB,QAAW,oBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,oCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,kBAAmB,CACjB,KAAQ,CACN,YAAe,cACf,QAAW,oBACX,YAAe;AAAA;AAAA;AAAA,EACf,KAAQ,CACN,iBACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,KACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,QAAW,iBACX,YAAe,sDACf,SAAY,CACV,kBACtB,CACA,CACA,CACe,EACD,SAAY,CACV,QAAW,CACT,MAAS,CACP,IAAO,kBAC3B,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,8BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,MACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,YAAe,4BACf,SAAY,CACV,KAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,8BACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,KAAQ,KAChC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,qBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,oBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,8BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,oBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,aAAgB,CACd,QAAW,iBACX,MAAS,CACP,KAAQ,qBACR,OAAU,CACR,QAAW,qCACnC,CACA,CACmB,EACD,iBAAoB,CAClB,QAAW,qBACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,QAAW,qCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,qBAAsB,CACpB,KAAQ,CACN,YAAe,2BACf,KAAQ,CACN,iBACD,EACD,QAAW,cACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,EAC5D,SAAY,CACV,QAAW,CACT,MAAS,CACP,YAAe,wBACf,UAAa,OACb,SAAY,MACZ,WAAc,UACd,UAAa,aACb,WAAc,aACd,MAAS,uBACT,YAAe,aACf,YAAe,kBACf,IAAO,QACP,mBAAsB,SAC1C,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,eACA,WACA,SACA,cACA,qBACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,KAAQ,CACN,MACA,UACD,EACD,YAAe,sCACf,SAAY,CACV,KAC5B,CACyB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,qBACf,SAAY,CACV,WAC5B,CACyB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,UACf,SAAY,CACV,OAC5B,CACyB,EACD,YAAe,CACb,KAAQ,SACR,SAAY,CACV,MACA,iBACA,MACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,yBACf,SAAY,CACV,kBAChC,CAC6B,EACD,eAAkB,CAChB,KAAQ,SACR,OAAU,OACV,YAAe,4CACf,SAAY,CACV,YAChC,CAC6B,EACD,KAAQ,CACN,KAAQ,SACR,YAAe,0BACf,SAAY,CACV,KAChC,CACA,CACA,CACyB,EACD,oBAAuB,CACrB,KAAQ,UACR,YAAe,oCACf,SAAY,CACV,EAC5B,CACyB,EACD,mBAAsB,CACpB,KAAQ,SACR,YAAe,wDACf,SAAY,CACV,iBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,4BACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,aAAgB,MAChB,SAAY,YACZ,OAAU,QACV,YAAe,CACb,IAAO,mBACP,eAAkB,aAClB,KAAQ,KACT,EACD,oBAAuB,EAC/C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,oBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,sBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,gCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,gBAAmB,CACjB,QAAW,gCACX,MAAS,CACP,KAAQ,uBACR,OAAU,CACR,QAAW,+BACnC,CACA,CACmB,EACD,sBAAyB,CACvB,QAAW,mCACX,MAAS,CACP,KAAQ,8BACR,OAAU,CACR,QAAW,kCACnC,CACA,CACmB,EACD,qBAAwB,CACtB,QAAW,2BACX,MAAS,CACP,KAAQ,6BACR,OAAU,CACR,QAAW,0BACnC,CACA,CACmB,EACD,qBAAwB,CACtB,QAAW,iCACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,wBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,uDAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,oBAAuB,CACrB,QAAW,wBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,uDACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,qCAAsC,CACpC,KAAQ,CACN,YAAe,2BACf,KAAQ,CACN,iBACD,EACD,QAAW,8BACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,EAC5D,SAAY,CACV,QAAW,CACT,MAAS,CACP,YAAe,wBACf,UAAa,OACb,SAAY,MACZ,WAAc,UACd,UAAa,aACb,WAAc,aACd,MAAS,uBACT,YAAe,aACf,YAAe,kBACf,IAAO,QACP,mBAAsB,SAC1C,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,0CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,eACA,WACA,SACA,cACA,qBACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,KAAQ,CACN,MACA,UACD,EACD,YAAe,sCACf,SAAY,CACV,KAC5B,CACyB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,qBACf,SAAY,CACV,WAC5B,CACyB,EACD,OAAU,CACR,KAAQ,SACR,YAAe,UACf,SAAY,CACV,OAC5B,CACyB,EACD,YAAe,CACb,KAAQ,SACR,SAAY,CACV,MACA,iBACA,MACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,yBACf,SAAY,CACV,kBAChC,CAC6B,EACD,eAAkB,CAChB,KAAQ,SACR,OAAU,OACV,YAAe,4CACf,SAAY,CACV,YAChC,CAC6B,EACD,KAAQ,CACN,KAAQ,SACR,YAAe,0BACf,SAAY,CACV,KAChC,CACA,CACA,CACyB,EACD,oBAAuB,CACrB,KAAQ,UACR,YAAe,oCACf,SAAY,CACV,EAC5B,CACyB,EACD,mBAAsB,CACpB,KAAQ,SACR,YAAe,wDACf,SAAY,CACV,iBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,0CACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,aAAgB,MAChB,SAAY,YACZ,OAAU,QACV,YAAe,CACb,IAAO,mBACP,eAAkB,aAClB,KAAQ,KACT,EACD,oBAAuB,EAC/C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,kBAAqB,CACnB,QAAW,oBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,QAAW,sBACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,4CAA4C,EAC5D,IAAO,CACL,YAAe,gCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,gBAAmB,CACjB,QAAW,gCACX,MAAS,CACP,KAAQ,uBACR,OAAU,CACR,QAAW,+BACnC,CACA,CACmB,EACD,sBAAyB,CACvB,QAAW,mCACX,MAAS,CACP,KAAQ,8BACR,OAAU,CACR,QAAW,kCACnC,CACA,CACmB,EACD,qBAAwB,CACtB,QAAW,2BACX,MAAS,CACP,KAAQ,6BACR,OAAU,CACR,QAAW,0BACnC,CACA,CACmB,EACD,qBAAwB,CACtB,QAAW,iCACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,gCACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,wBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,uDAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,oBAAuB,CACrB,QAAW,wBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,uDACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACA,CACG,EACD,WAAc,CACZ,UAAa,CACX,cAAiB,CACf,YAAe,uCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,mCACpB,CACA,CACA,CACa,EACD,SAAY,CACV,cAAiB,CACf,QAAW,6BACX,MAAS,CACP,aAAgB,mCAClC,CACA,CACA,CACA,CACA,CACO,EACD,oBAAuB,CACrB,YAAe,+CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,kBACpB,CACiB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,mCACxB,CACA,CACA,CACA,CACA,CACa,EACD,SAAY,CACV,UAAa,CACX,QAAW,uBACX,MAAS,CACP,KAAQ,mBACR,OAAU,CACR,QAAW,mCAC/B,CACA,CACA,CACA,CACA,CACA,CACO,EACD,cAAiB,CACf,YAAe,gCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,oCAAoC,EACvD,SAAY,CACV,gBAAmB,CACjB,QAAW,qBACX,MAAS,CACP,KAAQ,uBACR,OAAU,CACR,QAAW,wBAC/B,CACA,CACA,CACA,CACA,CACA,CACO,EACD,oBAAuB,CACrB,YAAe,+BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACpB,CACiB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,uDACxB,CACA,CACA,CACA,CACA,CACa,EACD,SAAY,CACV,cAAiB,CACf,QAAW,wBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,uDAC/B,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,QAAW,CACT,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,SAAY,CACV,uBAClB,CACA,CACA,CACA,CACA,CACO,EACD,WAAc,CACZ,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,aAClB,CACA,CACA,CACA,CACA,CACO,EACD,oBAAuB,CACrB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,8CAClB,CACA,CACA,CACA,CACA,CACO,EACD,SAAY,CACV,KAAQ,SACR,SAAY,CACV,cACA,aACA,aACA,eACA,aACA,WACA,YACA,UACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,YAAe,6HAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,qCAChB,EACD,aAAgB,CACd,KAAQ,SACR,YAAe,+CAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,kDAChB,EACD,UAAa,CACX,KAAQ,SACR,YAAe,uDAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,kCAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,sDAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,mEAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,uEAChB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,yBACX,YAAe,qCACf,SAAY,CACV,YACd,CACW,EACD,MAAS,CACP,KAAQ,SACR,OAAU,QACV,YAAe,0BAChB,EACD,YAAe,CACb,KAAQ,SACR,YAAe,gCAChB,EACD,YAAe,CACb,KAAQ,SACR,YAAe,2BAChB,EACD,IAAO,CACL,KAAQ,SACR,YAAe,wBAC3B,CACA,CACO,EACD,WAAc,CACZ,KAAQ,SACR,SAAY,CACV,MACA,UACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,6DACf,SAAY,CACV,kBACd,CACW,EACD,SAAY,CACV,KAAQ,SACR,YAAe,+DACf,SAAY,CACV,cACd,CACA,CACA,CACO,EACD,YAAe,CACb,KAAQ,SACR,SAAY,CACV,MACA,cACA,aACD,EACD,WAAc,CACZ,IAAO,CACL,KAAQ,SACR,YAAe,6DACf,SAAY,CACV,kBACd,CACW,EACD,YAAe,CACb,KAAQ,SACR,YAAe,oFACf,SAAY,CACV,cACd,CACW,EACD,YAAe,CACb,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,cACd,CACA,CACA,CACO,EACD,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,gDAClB,CACe,EACD,gBAAmB,CACjB,KAAQ,SACR,YAAe,8CACf,SAAY,CACV,YAClB,CACA,CACA,CACA,CACA,CACO,EACD,cAAiB,CACf,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,mBACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,wBAClB,CACA,CACA,CACA,CACA,CACO,EACD,YAAe,CACb,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,KAAQ,CACN,2BACA,yBACA,2BACD,EACD,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,SAAY,CACV,8BAClB,CACA,CACA,CACA,CACA,CACO,EACD,mBAAsB,CACpB,KAAQ,SACR,SAAY,CACV,aACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,KAAQ,CACN,wBACA,4BACD,EACD,YAAe,sFACf,SAAY,CACV,uBACd,CACW,EACD,UAAa,CACX,KAAQ,SACR,YAAe,gEACf,SAAY,CACV,MACd,CACW,EACD,SAAY,CACV,KAAQ,SACR,YAAe,+DACf,SAAY,CACV,KACd,CACW,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,mCACf,SAAY,CACV,SACd,CACW,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,sDACX,YAAe,kCACf,SAAY,CACV,YACd,CACW,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,0EACf,SAAY,CACV,YACd,CACW,EACD,SAAY,CACV,KAAQ,SACR,YAAe,8EACf,SAAY,CACV,WACd,CACW,EACD,GAAM,CACJ,KAAQ,SACR,YAAe,iEACf,SAAY,CACV,UACd,CACW,EACD,MAAS,CACP,KAAQ,SACR,OAAU,QACV,QAAW,oDACX,YAAe,2BACf,SAAY,CACV,sBACd,CACW,EACD,YAAe,CACb,KAAQ,SACR,YAAe,yEACf,SAAY,CACV,YACd,CACW,EACD,YAAe,CACb,KAAQ,SACR,YAAe,4BACf,SAAY,CACV,iBACd,CACW,EACD,IAAO,CACL,KAAQ,SACR,YAAe,yBACf,SAAY,CACV,OACd,CACW,EACD,mBAAsB,CACpB,KAAQ,SACR,KAAQ,CACN,UACA,UACD,EACD,YAAe,gDACf,SAAY,CACV,SACd,CACA,CACA,CACA,CACK,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,YACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,QACT,EACD,YAAe,4BAChB,EACD,YAAe,CACb,KAAQ,eACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,SACR,QAAW,kBACZ,EACD,YAAe,kCACvB,CACA,CACA,CACA","x_google_ignoreList":[0]}